[
    {
        "user": "U036PEBBNMC",
        "type": "message",
        "ts": "1732781823.006289",
        "client_msg_id": "d44d57d8-6f1d-40c3-91dc-47ca21033cae",
        "text": "I will try similar config like kc and update. Thanks",
        "team": "T05FWTX7PMG",
        "user_team": "TPZA6MDB5",
        "source_team": "TPZA6MDB5",
        "user_profile": {
            "avatar_hash": "803467c98ba9",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-03-18\/3257255417413_803467c98ba9c7d76f91_72.jpg",
            "first_name": "Ken",
            "real_name": "Ken Le",
            "display_name": "Ken Le",
            "team": "TPZA6MDB5",
            "name": "ken_le",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1732775259.479979",
        "parent_user_id": "U036PEBBNMC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "T8YM1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I will try similar config like kc and update. Thanks"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U7U2XB4BG"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U036PEBBNMC",
        "type": "message",
        "ts": "1732782610.806079",
        "edited": {
            "user": "U036PEBBNMC",
            "ts": "1732782951.000000"
        },
        "client_msg_id": "8dfe968e-4595-4167-bb85-363f57f10733",
        "text": "appreciate it, will inform if i need a direct call.\n\nI encounter these error with `VirtualService` Error from server (BadRequest): error when creating \"utility-ingress-service.yaml\": VirtualService in version \"v1\" cannot be handled as a VirtualService: strict decoding error: unknown field \"spec.hosts[1].match\", unknown field \"spec.hosts[1].route\", unknown field \"spec.hosts[2].match\", unknown field \"spec.hosts[2].rewrite\", unknown field \"spec.hosts[2].route\", unknown field \"spec.hosts[3].match\", unknown field \"spec.hosts[3].route\".\n\nUsing DA support template.",
        "team": "T05FWTX7PMG",
        "user_team": "TPZA6MDB5",
        "source_team": "TPZA6MDB5",
        "user_profile": {
            "avatar_hash": "803467c98ba9",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-03-18\/3257255417413_803467c98ba9c7d76f91_72.jpg",
            "first_name": "Ken",
            "real_name": "Ken Le",
            "display_name": "Ken Le",
            "team": "TPZA6MDB5",
            "name": "ken_le",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1732775259.479979",
        "parent_user_id": "U036PEBBNMC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Btazp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "appreciate it, will inform if i need a direct call.\n\nI encounter these error with "
                            },
                            {
                                "type": "text",
                                "text": "VirtualService",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " Error from server (BadRequest): error when creating \"utility-ingress-service.yaml\": VirtualService in version \"v1\" cannot be handled as a VirtualService: strict decoding error: unknown field \"spec.hosts[1].match\", unknown field \"spec.hosts[1].route\", unknown field \"spec.hosts[2].match\", unknown field \"spec.hosts[2].rewrite\", unknown field \"spec.hosts[2].route\", unknown field \"spec.hosts[3].match\", unknown field \"spec.hosts[3].route\".\n\nUsing DA support template."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U036PEBBNMC",
        "type": "message",
        "ts": "1732782636.640979",
        "client_msg_id": "28019060-0592-42a6-81df-cdd231e48e13",
        "text": "would be easier for me if use KC method which I am familiar with.",
        "team": "T05FWTX7PMG",
        "user_team": "TPZA6MDB5",
        "source_team": "TPZA6MDB5",
        "user_profile": {
            "avatar_hash": "803467c98ba9",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-03-18\/3257255417413_803467c98ba9c7d76f91_72.jpg",
            "first_name": "Ken",
            "real_name": "Ken Le",
            "display_name": "Ken Le",
            "team": "TPZA6MDB5",
            "name": "ken_le",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1732775259.479979",
        "parent_user_id": "U036PEBBNMC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Kiwfr",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "would be easier for me if use KC method which I am familiar with."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "text": "Hi, does anyone have a sample ingress configuration for AWS Load Balancer Controller? I’m having trouble implementing this rewrite part",
        "files": [
            {
                "id": "F083M7VBZCG",
                "file_access": "file_not_found",
                "created": 0,
                "timestamp": 0,
                "user": "U05FZBDQ4RJ",
                "filetype": "png"
            }
        ],
        "upload": false,
        "user": "U06GRUXKVHB",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "uXbR2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi, does anyone have a sample ingress configuration for AWS Load Balancer Controller? I’m having trouble implementing this rewrite part"
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1732852973.522369",
        "client_msg_id": "6bb59ac9-1fd9-48d3-b46a-e008862b483e",
        "team": "T05FWTX7PMG",
        "thread_ts": "1732852973.522369",
        "reply_count": 2,
        "reply_users_count": 1,
        "latest_reply": "1732868137.331699",
        "reply_users": [
            "U06GRUXKVHB"
        ],
        "replies": [
            {
                "user": "U06GRUXKVHB",
                "ts": "1732866828.231499"
            },
            {
                "user": "U06GRUXKVHB",
                "ts": "1732868137.331699"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "user_team": "TBL1G8KHT",
        "source_team": "TBL1G8KHT",
        "user_profile": {
            "avatar_hash": "fe525cefcf05",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-05-13\/8874936574327_fe525cefcf056db1b910_72.jpg",
            "first_name": "Bahri",
            "real_name": "Bahri Rizaldi",
            "display_name": "Bahri Rizaldi",
            "team": "TBL1G8KHT",
            "name": "bahri",
            "is_restricted": false,
            "is_ultra_restricted": false
        }
    },
    {
        "user": "U06GRUXKVHB",
        "type": "message",
        "ts": "1732866828.231499",
        "client_msg_id": "5e76c70b-16b1-4d39-82e8-9f7759a87ab8",
        "text": "For those facing the same issue, I managed to resolve it by using nginx to rewrite to the participant API\n\nnginx deployment:\n```apiVersion: apps\/v1\nkind: Deployment\nmetadata:\n  name: nginx-reverse-proxy\n  namespace: validator\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: nginx-reverse-proxy\n  template:\n    metadata:\n      labels:\n        app: nginx-reverse-proxy\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.27.3\n        ports:\n        - containerPort: 80\n        volumeMounts:\n        - name: config-volume\n          mountPath: \/etc\/nginx\/nginx.conf\n          subPath: nginx.conf\n      # ConfigMap where the actual routing is defined\n      volumes:\n      - name: config-volume\n        configMap:\n          name: nginx-config\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: nginx-reverse-proxy\n  namespace: validator\nspec:\n  selector:\n    app: nginx-reverse-proxy\n  ports:\n    - protocol: TCP\n      port: 80\n      targetPort: 80\ntype: NodePort   #&lt;-- Because ALB seems to prefer this (<https:\/\/github.com\/kubernetes-sigs\/aws-load-balancer-controller\/issues\/1695>)\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: nginx-config\n  namespace: validator\ndata:\n  nginx.conf: |\n    events {}\n    http {\n        server {\n            listen 80;\n\n            # Requirements for Utility UI\n            location \/api\/json-api\/ {\n                # Proxy the request to the participant on port 7575\n                proxy_pass <http:\/\/participant.validator.svc.cluster.local:7575\/>;\n            }\n        }\n    }```\ningress spec:\n```spec:\n  ingressClassName: alb\n  rules:\n    - host: \"utility.validator.{{ validator_hostname }}\"\n      http:\n        paths:\n          - path: \/api\/json-api\/*\n            pathType: ImplementationSpecific\n            backend:\n              service:\n                name: nginx-reverse-proxy\n                port:\n                  number: 80```",
        "team": "T05FWTX7PMG",
        "user_team": "TBL1G8KHT",
        "source_team": "TBL1G8KHT",
        "user_profile": {
            "avatar_hash": "fe525cefcf05",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-05-13\/8874936574327_fe525cefcf056db1b910_72.jpg",
            "first_name": "Bahri",
            "real_name": "Bahri Rizaldi",
            "display_name": "Bahri Rizaldi",
            "team": "TBL1G8KHT",
            "name": "bahri",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1732852973.522369",
        "parent_user_id": "U06GRUXKVHB",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "YV2Ti",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "For those facing the same issue, I managed to resolve it by using nginx to rewrite to the participant API\n\nnginx deployment:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "apiVersion: apps\/v1\nkind: Deployment\nmetadata:\n  name: nginx-reverse-proxy\n  namespace: validator\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: nginx-reverse-proxy\n  template:\n    metadata:\n      labels:\n        app: nginx-reverse-proxy\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.27.3\n        ports:\n        - containerPort: 80\n        volumeMounts:\n        - name: config-volume\n          mountPath: \/etc\/nginx\/nginx.conf\n          subPath: nginx.conf\n      # ConfigMap where the actual routing is defined\n      volumes:\n      - name: config-volume\n        configMap:\n          name: nginx-config\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: nginx-reverse-proxy\n  namespace: validator\nspec:\n  selector:\n    app: nginx-reverse-proxy\n  ports:\n    - protocol: TCP\n      port: 80\n      targetPort: 80\ntype: NodePort   #<-- Because ALB seems to prefer this ("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/kubernetes-sigs\/aws-load-balancer-controller\/issues\/1695"
                            },
                            {
                                "type": "text",
                                "text": ")\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: nginx-config\n  namespace: validator\ndata:\n  nginx.conf: |\n    events {}\n    http {\n        server {\n            listen 80;\n\n            # Requirements for Utility UI\n            location \/api\/json-api\/ {\n                # Proxy the request to the participant on port 7575\n                proxy_pass "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/participant.validator.svc.cluster.local:7575\/"
                            },
                            {
                                "type": "text",
                                "text": ";\n            }\n        }\n    }"
                            }
                        ],
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\ningress spec:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "spec:\n  ingressClassName: alb\n  rules:\n    - host: \"utility.validator.{{ validator_hostname }}\"\n      http:\n        paths:\n          - path: \/api\/json-api\/*\n            pathType: ImplementationSpecific\n            backend:\n              service:\n                name: nginx-reverse-proxy\n                port:\n                  number: 80"
                            }
                        ],
                        "border": 0
                    }
                ]
            }
        ]
    }
]