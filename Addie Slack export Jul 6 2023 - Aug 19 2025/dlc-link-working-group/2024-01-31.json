[
    {
        "user": "U05FU0HPZ9T",
        "type": "message",
        "ts": "1706764809.026809",
        "client_msg_id": "2e92b4f0-eed3-4b18-9002-ac58cb3fdd41",
        "text": "Hey Mark, it’s not going to be supported at first, as part of our current upgrades. However, what I read about Stamps makes me think they _could_ be supported in a similar way.\n\nI’m not 100% sure however, as usual the internet is flooded with marketing posts (like AI generated) and light on real details. Ordinals are inscribed into the _ordinal_ sequence of a sat. I don’t read that Stamps are the same, they might just be data on-chain. Which would mean they’re not really connected to transferring sats around and are therefore not really within the concept space of DLCs, they would really just be a separate data system. Do you know anything more? Thanks for asking, imma follow on on my end too",
        "team": "T05FWTX7PMG",
        "user_team": "T05FWTX7PMG",
        "source_team": "T05FWTX7PMG",
        "user_profile": {
            "avatar_hash": "e1b289f8d4a1",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-07-10\/5554364664692_e1b289f8d4a196bb5c14_72.png",
            "first_name": "Jesse",
            "real_name": "Jesse Eisenberg",
            "display_name": "Jesse Eisenberg - Bitsafe",
            "team": "T05FWTX7PMG",
            "name": "jesse",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BrHpS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hey Mark, it’s not going to be supported at first, as part of our current upgrades. However, what I read about Stamps makes me think they "
                            },
                            {
                                "type": "text",
                                "text": "could",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " be supported in a similar way.\n\nI’m not 100% sure however, as usual the internet is flooded with marketing posts (like AI generated) and light on real details. Ordinals are inscribed into the "
                            },
                            {
                                "type": "text",
                                "text": "ordinal",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " sequence of a sat. I don’t read that Stamps are the same, they might just be data on-chain. Which would mean they’re not really connected to transferring sats around and are therefore not really within the concept space of DLCs, they would really just be a separate data system. Do you know anything more? Thanks for asking, imma follow on on my end too"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "pray",
                "users": [
                    "U03GEHQPL0G"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U03FLQ1KUUE",
        "type": "message",
        "ts": "1706773437.693619",
        "client_msg_id": "03D0EEBE-98E9-4B0D-A908-1A515B7F1B4B",
        "text": "You're correct that stamps aren't on sats, so there's no risk of accidentally spending them. Only real source of truth I've seen is the github <https:\/\/github.com\/mikeinspace\/stamps\/blob\/main\/BitcoinStamps.md|https:\/\/github.com\/mikeinspace\/stamps\/blob\/main\/BitcoinStamps.md>",
        "team": "T05FWTX7PMG",
        "user_team": "T02GSUTPJ2D",
        "source_team": "T02GSUTPJ2D",
        "user_profile": {
            "avatar_hash": "492dd91998b3",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-06\/5059495397399_492dd91998b3129becc6_72.jpg",
            "first_name": "Kyran",
            "real_name": "Kyran Burraston",
            "display_name": "kyranjamie",
            "team": "T02GSUTPJ2D",
            "name": "kyran",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "id": 1,
                "footer_icon": "https:\/\/slack.github.com\/static\/img\/favicon-neutral.png",
                "color": "24292f",
                "bot_id": "B03A7E7FB5X",
                "app_unfurl_url": "https:\/\/github.com\/mikeinspace\/stamps\/blob\/main\/BitcoinStamps.md",
                "is_app_unfurl": true,
                "app_id": "A01BP7R4KNY",
                "fallback": "<https:\/\/github.com\/mikeinspace\/stamps\/blob\/main\/BitcoinStamps.md | BitcoinStamps.md>",
                "text": "*Bitcoin Stamps*\n\nStoring \"Art on the Blockchain\" as a method of achieving permanence is often a misnomer in the NFT world. Most NFTs are merely image pointers to centralized hosting or stored on-chain in prunable witness data. We propose a method of embedding base64-formatted image data using transaction outputs in a novel fashion.\n\nThe means by which this is achieved is encoding an image's binary content to a base64 string, placing this string as a suffix to `STAMP:` in a transaction's description key, and then broadcasting it using the Counterparty protocol onto the Bitcoin ledger. The length of the string means that Counterparty defaults to bare multisig, thereby chunking the data into outputs rather than using the limited (and prunable) OP_RETURN. By doing so, the data is preserved in such a manner that is impossible to prune from a fullnode, preserving the data immutably forever.\n\nGiven the cost of preserving data in this manner, we suggest the following guidance: 24x24 pixel, 8-colour-depth PNG or GIF. The constraints of this \"canvas\" are ideal for pixel art. In particular, the CryptoPunks use a native resolution of 24x24 pixels. While the technical specifications are open to interpretation and reinvention, inclusion within the Bitcoin Stamps directory will rely on a number of consensus rules on Bitcoin Stamps which are distinct from any other cases of using P2SH to encode data in this manner.\n\nBitcoin Stamps will be numbered based on the transaction timestamp. This is to ensure that the Bitcoin Stamps directory is ordered chronologically. The first Bitcoin Stamp will be the first transaction to include the `STAMP:` string with a valid base64 string appended in the description key, and so on. A transaction with an invalid or indecipherable base64 string will not be considered a Bitcoin Stamp. The Bitcoin Stamp number will begin at zero and continue indefinitely.\n\n*What Makes a Bitcoin Stamp?*\n\nA Bitcoin Stamp is a Counterparty transaction which contains a valid `STAMP:base64` string in the description key. STAMPS can be decoded directly from the original Bitcoin transaction. In order for speed of processing and to eliminate needs for indexing, we are utilizing Counterparty API to decode the original Bitcoin transactions. Once the decoding is complete, we upload the images to <http:\/\/stampchain.io|stampchain.io> for consumption via web applications as a convenience. It is intended that anyone may decode these transactions and interpret the underlying image data for rendering on any application.\n\n*Bitcoin Stamps abide by the following rules:*\n\n• A Bitcoin Stamp must be a numerical asset, for example: [A1997663462583877600]\n• A Bitcoin Stamp can be created from a previously existing numerical asset which was not previously a STAMP. This is accomplished by updating the asset to include the `stamp:base64` string in a new transaction.\n• Bitcoin Stamps cannot be duplicated on the same asset. For example, if one asset is a STAMP, then by simply changing the description field to a new base64 string, it will not become a new STAMP. However, the new `STAMP:` transaction will be created on the blockchain. The new transaction will just not be indexed by the official STAMPS project. This is intended to keep them in a one-to-one relationship to the first created STAMP.\n• The image data must be in either jpg, png, gif or webP format and encoded in base64.\n\n*Recommended Format:*\n\n• `STAMP:<base64 data>`\n\nExample:\n\n• `STAMP:iVBORw0KGgoAAAANSU...`\n\n*Potential Future State formatting:*\n\nWarning: Do not try this until its actually approved. Doing so may result in an invalid STAMP as plans may change.\n\n• `STAMP:data:image\/png;base64,iVBORw0KGgoAAAANSU...`\n\n*Decoding a Bitcoin Stamp*\n\nA raw bitcoin transaction may be decoded using tools such as:\n\n<https:\/\/jpja.github.io\/Electrum-Counterparty\/decode_tx.htm|https:\/\/jpja.github.io\/Electrum-Counterparty\/decode_tx.htm>\n\nThis will reveal the description field of the STAMP transaction. The description field will contain the base64 string. This string can be decoded using any base64 decoder.\n\n*Absence of MIME-type and encoding*\n\nOur rationale for excluding both the MIME-type and encoding goes as follows:\n\n• The fewer the bytes the better.\n• Given the limited scope of acceptable file formats, we are confident that decoding them accurately based on the base64 string alone is trivial.\n• We are only interested in decoding base64, so if the string does not conform to valid base64 it is rejected. Therefore, specification of the encoding is unnecessary.\n\nThis all pertains to current state. The future-state proposal would require a MIME-type like 'text\/plain' for the auxilary content to be decoded.\n\n*XCHAIN-specific markup*\n\nWhile no specific markup should be required, STAMPS are purposely designed to be very small in the range of 24x24 pixels. While they can be presented at this size or even scaled-up using the traditional method, the user experience would be sub-optimal. Using a few simple CSS rules will optimize the rendering. Eg: image-rendering: pixelated;\n\nVisual example of pixel art scaling without image degradation: <https:\/\/i.imgur.com\/CGLqw11.jpg|https:\/\/i.imgur.com\/CGLqw11.jpg>\n\n*Bitcoin Stamps Indexing Reference*\n\nThe official stamp indexing reference is here: <https:\/\/stampchain.io\/stamp.json|https:\/\/stampchain.io\/stamp.json> This may be generated and hosted by anyone using the sample code in this project.\n\n*Trading*\n\nUsers are able to trade the token on the Counterparty DEX, Dispensers or OTC or any other method as traditional Counterparty assets.\n\n*The Ecosystem*\n\n• Main Directory: <https:\/\/stampchain.io\/|https:\/\/STAMPCHAIN.IO>\n• 3rd Party Directory: <https:\/\/kaleidoscopexcp.com\/stamps\/|https:\/\/kaleidoscopexcp.com\/stamps\/>\n• Marketplace: <https:\/\/scarce.city\/marketplace\/digital?refinementList%5Bset%5D%5B0%5D=stampchain|https:\/\/scarce.city\/marketplace\/digital?refinementList%5Bset%5D%5B0%5D=stampchain>\n\n*Future Partnerships*\n\nThere have been ongoing discussions with Emblem, Hiro Wallet and Token.Art dev teams. All expressed enthusiasm about the potential for integration.",
                "title": "<https:\/\/github.com\/mikeinspace\/stamps\/blob\/main\/BitcoinStamps.md | BitcoinStamps.md>",
                "footer": "<https:\/\/github.com\/mikeinspace\/stamps|mikeinspace\/stamps>",
                "mrkdwn_in": [
                    "text"
                ]
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9X6D4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "You're correct that stamps aren't on sats, so there's no risk of accidentally spending them. Only real source of truth I've seen is the github "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/mikeinspace\/stamps\/blob\/main\/BitcoinStamps.md",
                                "text": "https:\/\/github.com\/mikeinspace\/stamps\/blob\/main\/BitcoinStamps.md"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "pray",
                "users": [
                    "U05FU0HPZ9T"
                ],
                "count": 1
            }
        ]
    }
]