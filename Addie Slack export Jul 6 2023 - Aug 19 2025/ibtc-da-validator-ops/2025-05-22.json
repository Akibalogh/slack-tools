[
    {
        "user": "U088UV6MKFE",
        "type": "message",
        "ts": "1747902869.095129",
        "client_msg_id": "599676d0-c60b-435b-ad75-5da5c6ceeb88",
        "text": "Thanks, checking!",
        "team": "T05FWTX7PMG",
        "user_team": "T05FWTX7PMG",
        "source_team": "T05FWTX7PMG",
        "user_profile": {
            "avatar_hash": "88f054e6b2e2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-04-15\/8759384805844_88f054e6b2e25bb0bd26_72.jpg",
            "first_name": "Robert",
            "real_name": "Robert Tera",
            "display_name": "Robert Tera",
            "team": "T05FWTX7PMG",
            "name": "robert",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1747731109.384529",
        "parent_user_id": "U088UV6MKFE",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "WTE6F",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks, checking!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U088UV6MKFE",
        "type": "message",
        "ts": "1747910701.387599",
        "client_msg_id": "81b42447-a184-48db-a378-52fe455e6ab8",
        "text": "Nice, getting much closer...\n <https:\/\/github.com\/DLC-link\/daml-sandbox\/pull\/1\/files#diff-ba32b11647fda7971b42f11ac58b302fa7335c6fcb7cea0e577fc1871c486068>\n\nNo errors, but the contracts are not deployed. I wonder if the execution step is correct like this?\n\nOn another note, had to figure out where these are imported from, are you using some `import *` to access these so casually?",
        "team": "T05FWTX7PMG",
        "user_team": "T05FWTX7PMG",
        "source_team": "T05FWTX7PMG",
        "user_profile": {
            "avatar_hash": "88f054e6b2e2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-04-15\/8759384805844_88f054e6b2e25bb0bd26_72.jpg",
            "first_name": "Robert",
            "real_name": "Robert Tera",
            "display_name": "Robert Tera",
            "team": "T05FWTX7PMG",
            "name": "robert",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1747731109.384529",
        "parent_user_id": "U088UV6MKFE",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "T8qoS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Nice, getting much closer...\n "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/DLC-link\/daml-sandbox\/pull\/1\/files#diff-ba32b11647fda7971b42f11ac58b302fa7335c6fcb7cea0e577fc1871c486068"
                            },
                            {
                                "type": "text",
                                "text": "\n\nNo errors, but the contracts are not deployed. I wonder if the execution step is correct like this?\n\nOn another note, had to figure out where these are imported from, are you using some "
                            },
                            {
                                "type": "text",
                                "text": "import *",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " to access these so casually?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U088UV6MKFE",
        "type": "message",
        "ts": "1747910843.515749",
        "client_msg_id": "80e69d1b-f1e1-432b-b90d-081543bcc519",
        "text": "Yes, but its a gazillion lines long, and I couldnt even find the relevant bit. Any tips how to search for this step effectively?",
        "team": "T05FWTX7PMG",
        "user_team": "T05FWTX7PMG",
        "source_team": "T05FWTX7PMG",
        "user_profile": {
            "avatar_hash": "88f054e6b2e2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-04-15\/8759384805844_88f054e6b2e25bb0bd26_72.jpg",
            "first_name": "Robert",
            "real_name": "Robert Tera",
            "display_name": "Robert Tera",
            "team": "T05FWTX7PMG",
            "name": "robert",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1747731109.384529",
        "parent_user_id": "U088UV6MKFE",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LNM9Y",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes, but its a gazillion lines long, and I couldnt even find the relevant bit. Any tips how to search for this step effectively?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U088UV6MKFE",
        "type": "message",
        "ts": "1747910871.949209",
        "client_msg_id": "dc44b6bc-dfde-4851-9634-8334915f2de4",
        "text": "it does say \"Bootstrap script successfully executed.\"",
        "team": "T05FWTX7PMG",
        "user_team": "T05FWTX7PMG",
        "source_team": "T05FWTX7PMG",
        "user_profile": {
            "avatar_hash": "88f054e6b2e2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-04-15\/8759384805844_88f054e6b2e25bb0bd26_72.jpg",
            "first_name": "Robert",
            "real_name": "Robert Tera",
            "display_name": "Robert Tera",
            "team": "T05FWTX7PMG",
            "name": "robert",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1747731109.384529",
        "parent_user_id": "U088UV6MKFE",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dnfh7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "it does say \"Bootstrap script successfully executed.\""
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U088UV6MKFE",
        "type": "message",
        "ts": "1747910887.637419",
        "client_msg_id": "89e7b55a-82bd-4fd5-8f09-5cd9680ff0f8",
        "text": "but i guess it just swallowed the error",
        "team": "T05FWTX7PMG",
        "user_team": "T05FWTX7PMG",
        "source_team": "T05FWTX7PMG",
        "user_profile": {
            "avatar_hash": "88f054e6b2e2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-04-15\/8759384805844_88f054e6b2e25bb0bd26_72.jpg",
            "first_name": "Robert",
            "real_name": "Robert Tera",
            "display_name": "Robert Tera",
            "team": "T05FWTX7PMG",
            "name": "robert",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1747731109.384529",
        "parent_user_id": "U088UV6MKFE",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bn5RX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "but i guess it just swallowed the error"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U088UV6MKFE",
        "type": "message",
        "ts": "1747910923.799999",
        "client_msg_id": "d6f04016-d3a8-4460-b7a8-29822a3b31a6",
        "text": "Anyway I can share the logs somehow",
        "team": "T05FWTX7PMG",
        "user_team": "T05FWTX7PMG",
        "source_team": "T05FWTX7PMG",
        "user_profile": {
            "avatar_hash": "88f054e6b2e2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-04-15\/8759384805844_88f054e6b2e25bb0bd26_72.jpg",
            "first_name": "Robert",
            "real_name": "Robert Tera",
            "display_name": "Robert Tera",
            "team": "T05FWTX7PMG",
            "name": "robert",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1747731109.384529",
        "parent_user_id": "U088UV6MKFE",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bROnc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Anyway I can share the logs somehow"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "text": "Ok not too bad actually",
        "files": [
            {
                "id": "F08TADW7F3M",
                "created": 1747910978,
                "timestamp": 1747910978,
                "name": "logs.txt",
                "title": "logs.txt",
                "mimetype": "text\/plain",
                "filetype": "text",
                "pretty_type": "Plain Text",
                "user": "U088UV6MKFE",
                "user_team": "T05FWTX7PMG",
                "editable": false,
                "size": 5530108,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https:\/\/files.slack.com\/files-pri\/T05FWTX7PMG-F08TADW7F3M\/logs.txt?t=xoxe-5540949261730-9379886868950-9399429450144-f246808db27ea3f8fe28c772227f9ea1",
                "url_private_download": "https:\/\/files.slack.com\/files-pri\/T05FWTX7PMG-F08TADW7F3M\/download\/logs.txt?t=xoxe-5540949261730-9379886868950-9399429450144-f246808db27ea3f8fe28c772227f9ea1",
                "media_display_type": "unknown",
                "permalink": "https:\/\/bit-safe.slack.com\/files\/U05FZBDQ4RJ\/F08TADW7F3M\/logs.txt",
                "permalink_public": "https:\/\/slack-files.com\/T05FWTX7PMG-F08TADW7F3M-ceab1b924e",
                "is_starred": false,
                "skipped_shares": true,
                "has_rich_preview": false,
                "file_access": "visible"
            }
        ],
        "upload": false,
        "user": "U088UV6MKFE",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "10zpx",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ok not too bad actually"
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1747910989.020039",
        "client_msg_id": "404906ee-f6dc-46e6-b338-148557453316",
        "team": "T05FWTX7PMG",
        "thread_ts": "1747731109.384529",
        "parent_user_id": "U088UV6MKFE",
        "user_team": "T05FWTX7PMG",
        "source_team": "T05FWTX7PMG",
        "user_profile": {
            "avatar_hash": "88f054e6b2e2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-04-15\/8759384805844_88f054e6b2e25bb0bd26_72.jpg",
            "first_name": "Robert",
            "real_name": "Robert Tera",
            "display_name": "Robert Tera",
            "team": "T05FWTX7PMG",
            "name": "robert",
            "is_restricted": false,
            "is_ultra_restricted": false
        }
    },
    {
        "text": "This is more complete",
        "files": [
            {
                "id": "F08U82B6Z0Q",
                "created": 1747911771,
                "timestamp": 1747911771,
                "name": "docker.log",
                "title": "docker.log",
                "mimetype": "application\/octet-stream",
                "filetype": "binary",
                "pretty_type": "Binary",
                "user": "U088UV6MKFE",
                "user_team": "T05FWTX7PMG",
                "editable": false,
                "size": 8286015,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https:\/\/files.slack.com\/files-pri\/T05FWTX7PMG-F08U82B6Z0Q\/docker.log?t=xoxe-5540949261730-9379886868950-9399429450144-f246808db27ea3f8fe28c772227f9ea1",
                "url_private_download": "https:\/\/files.slack.com\/files-pri\/T05FWTX7PMG-F08U82B6Z0Q\/download\/docker.log?t=xoxe-5540949261730-9379886868950-9399429450144-f246808db27ea3f8fe28c772227f9ea1",
                "media_display_type": "unknown",
                "permalink": "https:\/\/bit-safe.slack.com\/files\/U05FZBDQ4RJ\/F08U82B6Z0Q\/docker.log",
                "permalink_public": "https:\/\/slack-files.com\/T05FWTX7PMG-F08U82B6Z0Q-44834c413a",
                "is_starred": false,
                "skipped_shares": true,
                "has_rich_preview": false,
                "file_access": "visible"
            }
        ],
        "upload": false,
        "user": "U088UV6MKFE",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+tv1k",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This is more complete"
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1747911782.229559",
        "client_msg_id": "a906e2a0-f3e9-43fd-87b0-848831070479",
        "team": "T05FWTX7PMG",
        "thread_ts": "1747731109.384529",
        "parent_user_id": "U088UV6MKFE",
        "user_team": "T05FWTX7PMG",
        "source_team": "T05FWTX7PMG",
        "user_profile": {
            "avatar_hash": "88f054e6b2e2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-04-15\/8759384805844_88f054e6b2e25bb0bd26_72.jpg",
            "first_name": "Robert",
            "real_name": "Robert Tera",
            "display_name": "Robert Tera",
            "team": "T05FWTX7PMG",
            "name": "robert",
            "is_restricted": false,
            "is_ultra_restricted": false
        }
    },
    {
        "user": "U088UV6MKFE",
        "type": "message",
        "ts": "1747913175.241129",
        "client_msg_id": "88a2c731-24c4-4490-9fa2-78c74f428434",
        "text": "`docker build -f docker\/Dockerfile.canton . -t canton-sandbox`\n`docker run -p 7575:7575 -p 5012:5012 -p 5011:5011 -p 7576:7576 -p 7577:7577 canton-sandbox`",
        "team": "T05FWTX7PMG",
        "user_team": "T05FWTX7PMG",
        "source_team": "T05FWTX7PMG",
        "user_profile": {
            "avatar_hash": "88f054e6b2e2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-04-15\/8759384805844_88f054e6b2e25bb0bd26_72.jpg",
            "first_name": "Robert",
            "real_name": "Robert Tera",
            "display_name": "Robert Tera",
            "team": "T05FWTX7PMG",
            "name": "robert",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1747731109.384529",
        "parent_user_id": "U088UV6MKFE",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mQ9nw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "docker build -f docker\/Dockerfile.canton . -t canton-sandbox",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "docker run -p 7575:7575 -p 5012:5012 -p 5011:5011 -p 7576:7576 -p 7577:7577 canton-sandbox",
                                "style": {
                                    "code": true
                                }
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U088UV6MKFE",
        "type": "message",
        "ts": "1747913224.885409",
        "client_msg_id": "37fb1506-94ad-430c-b9b8-decc70d4377e",
        "text": "&gt; I think now it's cut off at the end?\nWell I cut if ott but the script finishes about halfway through these logs, then it just runs doing nothing",
        "team": "T05FWTX7PMG",
        "user_team": "T05FWTX7PMG",
        "source_team": "T05FWTX7PMG",
        "user_profile": {
            "avatar_hash": "88f054e6b2e2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-04-15\/8759384805844_88f054e6b2e25bb0bd26_72.jpg",
            "first_name": "Robert",
            "real_name": "Robert Tera",
            "display_name": "Robert Tera",
            "team": "T05FWTX7PMG",
            "name": "robert",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1747731109.384529",
        "parent_user_id": "U088UV6MKFE",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "eitsl",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think now it's cut off at the end?"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Well I cut if ott but the script finishes about halfway through these logs, then it just runs doing nothing"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U088UV6MKFE",
        "type": "message",
        "ts": "1747913351.075619",
        "client_msg_id": "8e7ae22a-81e9-4d46-96f2-aab6ecb119c5",
        "text": "`{\"@timestamp\":\"2025-05-22T10:59:42.628Z\",\"@version\":\"1\",\"message\":\"Bootstrap script successfully executed.\",\"logger_name\":\"c.d.canton.ServerRunner\",\"thread_name\":\"main\",\"level\":\"INFO\",\"level_value\":20000}`",
        "team": "T05FWTX7PMG",
        "user_team": "T05FWTX7PMG",
        "source_team": "T05FWTX7PMG",
        "user_profile": {
            "avatar_hash": "88f054e6b2e2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-04-15\/8759384805844_88f054e6b2e25bb0bd26_72.jpg",
            "first_name": "Robert",
            "real_name": "Robert Tera",
            "display_name": "Robert Tera",
            "team": "T05FWTX7PMG",
            "name": "robert",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1747731109.384529",
        "parent_user_id": "U088UV6MKFE",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "f10AW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "{\"@timestamp\":\"2025-05-22T10:59:42.628Z\",\"@version\":\"1\",\"message\":\"Bootstrap script successfully executed.\",\"logger_name\":\"c.d.canton.ServerRunner\",\"thread_name\":\"main\",\"level\":\"INFO\",\"level_value\":20000}",
                                "style": {
                                    "code": true
                                }
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U088UV6MKFE",
        "type": "message",
        "ts": "1747915006.352479",
        "client_msg_id": "3c29a4ff-e85a-4a4c-a66a-54a5f85a06bf",
        "text": "oh sorry",
        "team": "T05FWTX7PMG",
        "user_team": "T05FWTX7PMG",
        "source_team": "T05FWTX7PMG",
        "user_profile": {
            "avatar_hash": "88f054e6b2e2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-04-15\/8759384805844_88f054e6b2e25bb0bd26_72.jpg",
            "first_name": "Robert",
            "real_name": "Robert Tera",
            "display_name": "Robert Tera",
            "team": "T05FWTX7PMG",
            "name": "robert",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1747731109.384529",
        "parent_user_id": "U088UV6MKFE",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Jj0cA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "oh sorry"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U088UV6MKFE",
        "type": "message",
        "ts": "1747915010.404639",
        "client_msg_id": "e5d324a7-c408-4e61-b581-bca922afc60b",
        "text": "youre right yes pushed now",
        "team": "T05FWTX7PMG",
        "user_team": "T05FWTX7PMG",
        "source_team": "T05FWTX7PMG",
        "user_profile": {
            "avatar_hash": "88f054e6b2e2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-04-15\/8759384805844_88f054e6b2e25bb0bd26_72.jpg",
            "first_name": "Robert",
            "real_name": "Robert Tera",
            "display_name": "Robert Tera",
            "team": "T05FWTX7PMG",
            "name": "robert",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1747731109.384529",
        "parent_user_id": "U088UV6MKFE",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XAYMj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "youre right yes pushed now"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U088UV6MKFE",
        "type": "message",
        "ts": "1747915017.231439",
        "client_msg_id": "44f10b21-7680-4ea8-bfc9-2188f7e86d4e",
        "text": "gosh maybe this will fix it?",
        "team": "T05FWTX7PMG",
        "user_team": "T05FWTX7PMG",
        "source_team": "T05FWTX7PMG",
        "user_profile": {
            "avatar_hash": "88f054e6b2e2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-04-15\/8759384805844_88f054e6b2e25bb0bd26_72.jpg",
            "first_name": "Robert",
            "real_name": "Robert Tera",
            "display_name": "Robert Tera",
            "team": "T05FWTX7PMG",
            "name": "robert",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1747731109.384529",
        "parent_user_id": "U088UV6MKFE",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NJjUu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "gosh maybe this will fix it?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U088UV6MKFE",
        "type": "message",
        "ts": "1747915092.291399",
        "client_msg_id": "163973e3-cc60-4ce4-b606-fc1833a91d82",
        "text": "trying it now. btw once its up and running, I usually do\n`canton -c remote-connect.conf` and then I can interact inside",
        "team": "T05FWTX7PMG",
        "user_team": "T05FWTX7PMG",
        "source_team": "T05FWTX7PMG",
        "user_profile": {
            "avatar_hash": "88f054e6b2e2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-04-15\/8759384805844_88f054e6b2e25bb0bd26_72.jpg",
            "first_name": "Robert",
            "real_name": "Robert Tera",
            "display_name": "Robert Tera",
            "team": "T05FWTX7PMG",
            "name": "robert",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1747731109.384529",
        "parent_user_id": "U088UV6MKFE",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4TXOK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "trying it now. btw once its up and running, I usually do\n"
                            },
                            {
                                "type": "text",
                                "text": "canton -c remote-connect.conf",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and then I can interact inside"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U088UV6MKFE",
        "type": "message",
        "ts": "1747915154.337959",
        "client_msg_id": "1f77a811-3979-44dd-8250-9d2f896be864",
        "text": "And my manual test is, inside the remote connected canton console:\n`val decPart = participant1.parties.find(\"decentralized-party\")`\n`participant1.ledger_api.state.acs.of_party(decPart).map(x =&gt; (x.templateId, x.arguments))`",
        "team": "T05FWTX7PMG",
        "user_team": "T05FWTX7PMG",
        "source_team": "T05FWTX7PMG",
        "user_profile": {
            "avatar_hash": "88f054e6b2e2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-04-15\/8759384805844_88f054e6b2e25bb0bd26_72.jpg",
            "first_name": "Robert",
            "real_name": "Robert Tera",
            "display_name": "Robert Tera",
            "team": "T05FWTX7PMG",
            "name": "robert",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1747731109.384529",
        "parent_user_id": "U088UV6MKFE",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "B4hAd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "And my manual test is, inside the remote connected canton console:\n"
                            },
                            {
                                "type": "text",
                                "text": "val decPart = participant1.parties.find(\"decentralized-party\")",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "participant1.ledger_api.state.acs.of_party(decPart).map(x => (x.templateId, x.arguments))",
                                "style": {
                                    "code": true
                                }
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U088UV6MKFE",
        "type": "message",
        "ts": "1747915166.047859",
        "client_msg_id": "92b6e673-99bc-4e3f-8524-d840d635ec5c",
        "text": "I assume I should see the two rules contracts",
        "team": "T05FWTX7PMG",
        "user_team": "T05FWTX7PMG",
        "source_team": "T05FWTX7PMG",
        "user_profile": {
            "avatar_hash": "88f054e6b2e2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-04-15\/8759384805844_88f054e6b2e25bb0bd26_72.jpg",
            "first_name": "Robert",
            "real_name": "Robert Tera",
            "display_name": "Robert Tera",
            "team": "T05FWTX7PMG",
            "name": "robert",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1747731109.384529",
        "parent_user_id": "U088UV6MKFE",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fEObI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I assume I should see the two rules contracts"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U088UV6MKFE",
        "type": "message",
        "ts": "1747915183.742749",
        "client_msg_id": "5b63c531-fb43-4494-9c14-5d5da30fb4b2",
        "text": "but yeah, its empty",
        "team": "T05FWTX7PMG",
        "user_team": "T05FWTX7PMG",
        "source_team": "T05FWTX7PMG",
        "user_profile": {
            "avatar_hash": "88f054e6b2e2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-04-15\/8759384805844_88f054e6b2e25bb0bd26_72.jpg",
            "first_name": "Robert",
            "real_name": "Robert Tera",
            "display_name": "Robert Tera",
            "team": "T05FWTX7PMG",
            "name": "robert",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1747731109.384529",
        "parent_user_id": "U088UV6MKFE",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "U8uZD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "but yeah, its empty"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U088UV6MKFE",
        "type": "message",
        "ts": "1747921530.805039",
        "client_msg_id": "fce2a799-2226-44b1-8c19-bc5e62fbbfe7",
        "text": "I must have been doing something wrong, i apologize. I do see an error now:\n\n```{\"@timestamp\":\"2025-05-22T13:44:18.080Z\",\"@version\":\"1\",\"message\":\"Bootstrap script terminated with an error: java.lang.UnsupportedOperationException: value type not yet implemented: class scala.collection.immutable.Set$Set3\\n\\tat com.digitalasset.canton.console.ConsoleMacros$ledger_api_utils$.mapToLedgerApiValue(ConsoleMacros.scala:439)\\n\\tat com.digitalasset.canton.console.ConsoleMacros$ledger_api_utils$.mapToRecordField(ConsoleMacros.scala:448)\\n\\tat com.digitalasset.canton.console.ConsoleMacros$ledger_api_utils$.$anonfun$buildArguments$1(ConsoleMacros.scala:453)\\n\\tat scala.collection.StrictOptimizedIterableOps.map(StrictOptimizedIterableOps.scala:100)\\n\\tat scala.collection.StrictOptimizedIterableOps.map$(StrictOptimizedIterableOps.scala:87)\\n\\tat scala.collection.immutable.Map$Map4.map(Map.scala:524)\\n\\tat com.digitalasset.canton.console.ConsoleMacros$ledger_api_utils$.buildArguments(ConsoleMacros.scala:453)\\n\\tat com.digitalasset.canton.console.ConsoleMacros$ledger_api_utils$.create(ConsoleMacros.scala:467)\\n\\tat ammonite.canton.interpreter.bootstrap$.main(<http:\/\/bootstrap.sc:156|bootstrap.sc:156>)\\n\\tat ammonite.canton.interpreter.canton$minusscript$.&lt;clinit&gt;(<http:\/\/bootstrap-entrypoint.sc:5|bootstrap-entrypoint.sc:5>)\\n\\tat ammonite.canton.interpreter.canton$minusscript.$main(<http:\/\/bootstrap-entrypoint.sc|bootstrap-entrypoint.sc>)\\n\\tat java.base\/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\\n\\tat java.base\/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\\n\\tat java.base\/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\\n\\tat java.base\/java.lang.reflect.Method.invoke(Method.java:569)\\n\\tat ammonite.runtime.Evaluator$$anon$1.$anonfun$evalMain$1(Evaluator.scala:107)\\n\\tat ammonite.util.Util$.withContextClassloader(Util.scala:21)\\n\\tat ammonite.runtime.Evaluator$$anon$1.evalMain(Evaluator.scala:89)\\n\\tat ammonite.runtime.Evaluator$$anon$1.$anonfun$processScriptBlock$1(Evaluator.scala:155)\\n\\tat ammonite.util.Catching.map(Res.scala:113)\\n\\tat ammonite.runtime.Evaluator$$anon$1.processScriptBlock(Evaluator.scala:152)\\n\\tat ammonite.interp.Interpreter.$anonfun$processSingleBlock$5(Interpreter.scala:342)\\n\\tat ammonite.util.Res$Success.flatMap(Res.scala:58)\\n\\tat ammonite.interp.Interpreter.$anonfun$processSingleBlock$4(Interpreter.scala:333)\\n\\tat ammonite.util.Res$Success.flatMap(Res.scala:58)\\n\\tat ammonite.interp.Interpreter.$anonfun$processSingleBlock$2(Interpreter.scala:325)\\n\\tat ammonite.util.Catching.flatMap(Res.scala:110)\\n\\tat ammonite.interp.Interpreter.processSingleBlock(Interpreter.scala:324)\\n\\tat ammonite.interp.Interpreter.$anonfun$processModule$8(Interpreter.scala:408)\\n\\tat ammonite.interp.Interpreter.$anonfun$processAllScriptBlocks$3(Interpreter.scala:535)\\n\\tat ammonite.util.Res$Success.flatMap(Res.scala:58)\\n\\tat ammonite.interp.Interpreter.compileRunBlock$1(Interpreter.scala:521)\\n\\tat ammonite.interp.Interpreter.$anonfun$processAllScriptBlocks$15(Interpreter.scala:583)\\n\\tat ammonite.util.Res$Success.flatMap(Res.scala:58)\\n\\tat ammonite.interp.Interpreter.$anonfun$processAllScriptBlocks$14(Interpreter.scala:577)\\n\\tat ammonite.util.Res$Success.flatMap(Res.scala:58)\\n\\tat ammonite.interp.Interpreter.$anonfun$processAllScriptBlocks$12(Interpreter.scala:574)\\n\\tat scala.Option.getOrElse(Option.scala:201)\\n\\tat ammonite.interp.Interpreter.loop$1(Interpreter.scala:574)\\n\\tat ammonite.interp.Interpreter.processAllScriptBlocks(Interpreter.scala:615)\\n\\tat ammonite.interp.Interpreter.$anonfun$processModule$6(Interpreter.scala:410)\\n\\tat ammonite.util.Catching.flatMap(Res.scala:110)\\n\\tat ammonite.interp.Interpreter.$anonfun$processModule$5(Interpreter.scala:401)\\n\\tat ammonite.util.Res$Success.flatMap(Res.scala:58)\\n\\tat ammonite.interp.Interpreter.processModule(Interpreter.scala:391)\\n\\tat com.digitalasset.canton.console.HeadlessConsole$.com$digitalasset$canton$console$HeadlessConsole$$runCode(HeadlessConsole.scala:183)\\n\\tat com.digitalasset.canton.console.HeadlessConsole.$anonfun$runModule$2(HeadlessConsole.scala:74)\\n\\tat scala.util.Either.flatMap(Either.scala:360)\\n\\tat <http:\/\/com.digitalasset.canton.console.HeadlessConsole.com|com.digitalasset.canton.console.HeadlessConsole.com>$digitalasset$canton$console$HeadlessConsole$$runModule(HeadlessConsole.scala:71)\\n\\tat com.digitalasset.canton.console.HeadlessConsole$.$anonfun$run$1(HeadlessConsole.scala:127)\\n\\tat scala.util.Either.flatMap(Either.scala:360)\\n\\tat com.digitalasset.canton.console.HeadlessConsole$.run(HeadlessConsole.scala:126)\\n\\tat com.digitalasset.canton.ConsoleScriptRunner$.$anonfun$run$8(Runner.scala:206)\\n\\tat scala.util.Either.flatMap(Either.scala:360)\\n\\tat com.digitalasset.canton.ConsoleScriptRunner$.run(Runner.scala:195)\\n\\tat com.digitalasset.canton.ServerRunner.startWithBootstrap$1(Runner.scala:64)\\n\\tat com.digitalasset.canton.ServerRunner.$anonfun$run$5(Runner.scala:71)\\n\\tat com.digitalasset.canton.ServerRunner.$anonfun$run$5$adapted(Runner.scala:71)\\n\\tat scala.Option.fold(Option.scala:263)\\n\\tat com.digitalasset.canton.ServerRunner.run(Runner.scala:71)\\n\\tat com.digitalasset.canton.CantonAppDriver.$anonfun$new$4(CantonAppDriver.scala:257)\\n\\tat com.digitalasset.canton.environment.Environment.$anonfun$startAndReconnect$3(Environment.scala:354)\\n\\tat com.digitalasset.canton.environment.Environment.$anonfun$startAndReconnect$3$adapted(Environment.scala:351)\\n\\tat scala.util.Either.map(Either.scala:390)\\n\\tat com.digitalasset.canton.environment.Environment.$anonfun$startAndReconnect$2(Environment.scala:351)\\n\\tat scala.util.Either.flatMap(Either.scala:360)\\n\\tat com.digitalasset.canton.environment.Environment.$anonfun$startAndReconnect$1(Environment.scala:350)\\n\\tat com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:100)\\n\\tat com.digitalasset.canton.environment.Environment.startAndReconnect(Environment.scala:343)\\n\\tat com.digitalasset.canton.CantonAppDriver.delayedEndpoint$com$digitalasset$canton$CantonAppDriver$1(CantonAppDriver.scala:257)\\n\\tat com.digitalasset.canton.CantonAppDriver$delayedInit$body.apply(CantonAppDriver.scala:39)\\n\\tat scala.Function0.apply$mcV$sp(Function0.scala:42)\\n\\tat scala.Function0.apply$mcV$sp$(Function0.scala:42)\\n\\tat scala.runtime.AbstractFunction0.apply$mcV$sp(AbstractFunction0.scala:17)\\n\\tat scala.App.$anonfun$main$1(App.scala:98)\\n\\tat scala.App.$anonfun$main$1$adapted(App.scala:98)\\n\\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)\\n\\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)\\n\\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)\\n\\tat scala.App.main(App.scala:98)\\n\\tat scala.App.main$(App.scala:96)\\n\\tat com.digitalasset.canton.CantonAppDriver.main(CantonAppDriver.scala:39)\\n\\tat com.digitalasset.canton.CantonEnterpriseApp.main(CantonEnterpriseApp.scala)\\n\",\"logger_name\":\"c.d.canton.ServerRunner\",\"thread_name\":\"main\",\"level\":\"ERROR\",\"level_value\":40000}```\n",
        "team": "T05FWTX7PMG",
        "user_team": "T05FWTX7PMG",
        "source_team": "T05FWTX7PMG",
        "user_profile": {
            "avatar_hash": "88f054e6b2e2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-04-15\/8759384805844_88f054e6b2e25bb0bd26_72.jpg",
            "first_name": "Robert",
            "real_name": "Robert Tera",
            "display_name": "Robert Tera",
            "team": "T05FWTX7PMG",
            "name": "robert",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1747731109.384529",
        "parent_user_id": "U088UV6MKFE",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JZcNJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I must have been doing something wrong, i apologize. I do see an error now:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "{\"@timestamp\":\"2025-05-22T13:44:18.080Z\",\"@version\":\"1\",\"message\":\"Bootstrap script terminated with an error: java.lang.UnsupportedOperationException: value type not yet implemented: class scala.collection.immutable.Set$Set3\\n\\tat com.digitalasset.canton.console.ConsoleMacros$ledger_api_utils$.mapToLedgerApiValue(ConsoleMacros.scala:439)\\n\\tat com.digitalasset.canton.console.ConsoleMacros$ledger_api_utils$.mapToRecordField(ConsoleMacros.scala:448)\\n\\tat com.digitalasset.canton.console.ConsoleMacros$ledger_api_utils$.$anonfun$buildArguments$1(ConsoleMacros.scala:453)\\n\\tat scala.collection.StrictOptimizedIterableOps.map(StrictOptimizedIterableOps.scala:100)\\n\\tat scala.collection.StrictOptimizedIterableOps.map$(StrictOptimizedIterableOps.scala:87)\\n\\tat scala.collection.immutable.Map$Map4.map(Map.scala:524)\\n\\tat com.digitalasset.canton.console.ConsoleMacros$ledger_api_utils$.buildArguments(ConsoleMacros.scala:453)\\n\\tat com.digitalasset.canton.console.ConsoleMacros$ledger_api_utils$.create(ConsoleMacros.scala:467)\\n\\tat ammonite.canton.interpreter.bootstrap$.main(bootstrap.sc:156)\\n\\tat ammonite.canton.interpreter.canton$minusscript$.<clinit>(bootstrap-entrypoint.sc:5)\\n\\tat ammonite.canton.interpreter.canton$minusscript.$main(bootstrap-entrypoint.sc)\\n\\tat java.base\/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\\n\\tat java.base\/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\\n\\tat java.base\/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\\n\\tat java.base\/java.lang.reflect.Method.invoke(Method.java:569)\\n\\tat ammonite.runtime.Evaluator$$anon$1.$anonfun$evalMain$1(Evaluator.scala:107)\\n\\tat ammonite.util.Util$.withContextClassloader(Util.scala:21)\\n\\tat ammonite.runtime.Evaluator$$anon$1.evalMain(Evaluator.scala:89)\\n\\tat ammonite.runtime.Evaluator$$anon$1.$anonfun$processScriptBlock$1(Evaluator.scala:155)\\n\\tat ammonite.util.Catching.map(Res.scala:113)\\n\\tat ammonite.runtime.Evaluator$$anon$1.processScriptBlock(Evaluator.scala:152)\\n\\tat ammonite.interp.Interpreter.$anonfun$processSingleBlock$5(Interpreter.scala:342)\\n\\tat ammonite.util.Res$Success.flatMap(Res.scala:58)\\n\\tat ammonite.interp.Interpreter.$anonfun$processSingleBlock$4(Interpreter.scala:333)\\n\\tat ammonite.util.Res$Success.flatMap(Res.scala:58)\\n\\tat ammonite.interp.Interpreter.$anonfun$processSingleBlock$2(Interpreter.scala:325)\\n\\tat ammonite.util.Catching.flatMap(Res.scala:110)\\n\\tat ammonite.interp.Interpreter.processSingleBlock(Interpreter.scala:324)\\n\\tat ammonite.interp.Interpreter.$anonfun$processModule$8(Interpreter.scala:408)\\n\\tat ammonite.interp.Interpreter.$anonfun$processAllScriptBlocks$3(Interpreter.scala:535)\\n\\tat ammonite.util.Res$Success.flatMap(Res.scala:58)\\n\\tat ammonite.interp.Interpreter.compileRunBlock$1(Interpreter.scala:521)\\n\\tat ammonite.interp.Interpreter.$anonfun$processAllScriptBlocks$15(Interpreter.scala:583)\\n\\tat ammonite.util.Res$Success.flatMap(Res.scala:58)\\n\\tat ammonite.interp.Interpreter.$anonfun$processAllScriptBlocks$14(Interpreter.scala:577)\\n\\tat ammonite.util.Res$Success.flatMap(Res.scala:58)\\n\\tat ammonite.interp.Interpreter.$anonfun$processAllScriptBlocks$12(Interpreter.scala:574)\\n\\tat scala.Option.getOrElse(Option.scala:201)\\n\\tat ammonite.interp.Interpreter.loop$1(Interpreter.scala:574)\\n\\tat ammonite.interp.Interpreter.processAllScriptBlocks(Interpreter.scala:615)\\n\\tat ammonite.interp.Interpreter.$anonfun$processModule$6(Interpreter.scala:410)\\n\\tat ammonite.util.Catching.flatMap(Res.scala:110)\\n\\tat ammonite.interp.Interpreter.$anonfun$processModule$5(Interpreter.scala:401)\\n\\tat ammonite.util.Res$Success.flatMap(Res.scala:58)\\n\\tat ammonite.interp.Interpreter.processModule(Interpreter.scala:391)\\n\\tat com.digitalasset.canton.console.HeadlessConsole$.com$digitalasset$canton$console$HeadlessConsole$$runCode(HeadlessConsole.scala:183)\\n\\tat com.digitalasset.canton.console.HeadlessConsole.$anonfun$runModule$2(HeadlessConsole.scala:74)\\n\\tat scala.util.Either.flatMap(Either.scala:360)\\n\\tat com.digitalasset.canton.console.HeadlessConsole.com$digitalasset$canton$console$HeadlessConsole$$runModule(HeadlessConsole.scala:71)\\n\\tat com.digitalasset.canton.console.HeadlessConsole$.$anonfun$run$1(HeadlessConsole.scala:127)\\n\\tat scala.util.Either.flatMap(Either.scala:360)\\n\\tat com.digitalasset.canton.console.HeadlessConsole$.run(HeadlessConsole.scala:126)\\n\\tat com.digitalasset.canton.ConsoleScriptRunner$.$anonfun$run$8(Runner.scala:206)\\n\\tat scala.util.Either.flatMap(Either.scala:360)\\n\\tat com.digitalasset.canton.ConsoleScriptRunner$.run(Runner.scala:195)\\n\\tat com.digitalasset.canton.ServerRunner.startWithBootstrap$1(Runner.scala:64)\\n\\tat com.digitalasset.canton.ServerRunner.$anonfun$run$5(Runner.scala:71)\\n\\tat com.digitalasset.canton.ServerRunner.$anonfun$run$5$adapted(Runner.scala:71)\\n\\tat scala.Option.fold(Option.scala:263)\\n\\tat com.digitalasset.canton.ServerRunner.run(Runner.scala:71)\\n\\tat com.digitalasset.canton.CantonAppDriver.$anonfun$new$4(CantonAppDriver.scala:257)\\n\\tat com.digitalasset.canton.environment.Environment.$anonfun$startAndReconnect$3(Environment.scala:354)\\n\\tat com.digitalasset.canton.environment.Environment.$anonfun$startAndReconnect$3$adapted(Environment.scala:351)\\n\\tat scala.util.Either.map(Either.scala:390)\\n\\tat com.digitalasset.canton.environment.Environment.$anonfun$startAndReconnect$2(Environment.scala:351)\\n\\tat scala.util.Either.flatMap(Either.scala:360)\\n\\tat com.digitalasset.canton.environment.Environment.$anonfun$startAndReconnect$1(Environment.scala:350)\\n\\tat com.digitalasset.canton.tracing.TraceContext$.withNewTraceContext(TraceContext.scala:100)\\n\\tat com.digitalasset.canton.environment.Environment.startAndReconnect(Environment.scala:343)\\n\\tat com.digitalasset.canton.CantonAppDriver.delayedEndpoint$com$digitalasset$canton$CantonAppDriver$1(CantonAppDriver.scala:257)\\n\\tat com.digitalasset.canton.CantonAppDriver$delayedInit$body.apply(CantonAppDriver.scala:39)\\n\\tat scala.Function0.apply$mcV$sp(Function0.scala:42)\\n\\tat scala.Function0.apply$mcV$sp$(Function0.scala:42)\\n\\tat scala.runtime.AbstractFunction0.apply$mcV$sp(AbstractFunction0.scala:17)\\n\\tat scala.App.$anonfun$main$1(App.scala:98)\\n\\tat scala.App.$anonfun$main$1$adapted(App.scala:98)\\n\\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)\\n\\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)\\n\\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)\\n\\tat scala.App.main(App.scala:98)\\n\\tat scala.App.main$(App.scala:96)\\n\\tat com.digitalasset.canton.CantonAppDriver.main(CantonAppDriver.scala:39)\\n\\tat com.digitalasset.canton.CantonEnterpriseApp.main(CantonEnterpriseApp.scala)\\n\",\"logger_name\":\"c.d.canton.ServerRunner\",\"thread_name\":\"main\",\"level\":\"ERROR\",\"level_value\":40000}"
                            }
                        ],
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": []
                    }
                ]
            }
        ]
    },
    {
        "user": "U088UV6MKFE",
        "type": "message",
        "ts": "1747921618.299419",
        "client_msg_id": "264dbf35-72cf-44a7-b5ea-f6ce1c4a47ea",
        "text": "Must've been a docker cache issue",
        "team": "T05FWTX7PMG",
        "user_team": "T05FWTX7PMG",
        "source_team": "T05FWTX7PMG",
        "user_profile": {
            "avatar_hash": "88f054e6b2e2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-04-15\/8759384805844_88f054e6b2e25bb0bd26_72.jpg",
            "first_name": "Robert",
            "real_name": "Robert Tera",
            "display_name": "Robert Tera",
            "team": "T05FWTX7PMG",
            "name": "robert",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1747731109.384529",
        "parent_user_id": "U088UV6MKFE",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "HPjIz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Must've been a docker cache issue"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U088UV6MKFE",
        "type": "message",
        "ts": "1747922218.236149",
        "client_msg_id": "6278a131-b89a-480c-95b6-90cf49f6c631",
        "text": "Ok one sec, my bad",
        "team": "T05FWTX7PMG",
        "user_team": "T05FWTX7PMG",
        "source_team": "T05FWTX7PMG",
        "user_profile": {
            "avatar_hash": "88f054e6b2e2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-04-15\/8759384805844_88f054e6b2e25bb0bd26_72.jpg",
            "first_name": "Robert",
            "real_name": "Robert Tera",
            "display_name": "Robert Tera",
            "team": "T05FWTX7PMG",
            "name": "robert",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1747731109.384529",
        "parent_user_id": "U088UV6MKFE",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pMeLh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ok one sec, my bad"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U088UV6MKFE",
        "type": "message",
        "ts": "1747922581.791569",
        "edited": {
            "user": "U088UV6MKFE",
            "ts": "1747923238.000000"
        },
        "client_msg_id": "0bc9adfd-10f5-46b7-9f08-d41fa799e87d",
        "text": "It seems I have been running an old version of this script for quite some time now. And the first issue is with\n`\"members\" -> Set(attestor1, attestor2, attestor3)` in the `createGovRulesCommand` step. `Set` causes the error above, `Seq or List` causes a type-mismatch Error, as expected",
        "team": "T05FWTX7PMG",
        "user_team": "T05FWTX7PMG",
        "source_team": "T05FWTX7PMG",
        "user_profile": {
            "avatar_hash": "88f054e6b2e2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-04-15\/8759384805844_88f054e6b2e25bb0bd26_72.jpg",
            "first_name": "Robert",
            "real_name": "Robert Tera",
            "display_name": "Robert Tera",
            "team": "T05FWTX7PMG",
            "name": "robert",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1747731109.384529",
        "parent_user_id": "U088UV6MKFE",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "HBtYn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It seems I have been running an old version of this script for quite some time now. And the first issue is with\n"
                            },
                            {
                                "type": "text",
                                "text": "\"members\" -> Set(attestor1, attestor2, attestor3)",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " in the "
                            },
                            {
                                "type": "text",
                                "text": "createGovRulesCommand",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " step. "
                            },
                            {
                                "type": "text",
                                "text": "Set",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " causes the error above, "
                            },
                            {
                                "type": "text",
                                "text": "Seq or List",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " causes a type-mismatch Error, as expected"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U088UV6MKFE",
        "type": "message",
        "ts": "1747924716.107179",
        "edited": {
            "user": "U088UV6MKFE",
            "ts": "1747924791.000000"
        },
        "client_msg_id": "748a35ac-391e-479b-a39a-f817950cd0f1",
        "text": "Ah next finding:\nIf I change it to `List(attestor1,..` that line succeeds, but the `prepare` step fails, with\n```ERROR c.d.c.c.ConsoleEnvironment - Request failed for participant1.\n  GrpcClientError: INVALID_ARGUMENT\/COMMAND_PREPROCESSING_FAILED(8,6c11901c): mismatching type: DA.Set.Types:Set Party and value: ValueList(FrontStack(ValueParty(attestor1::1220c0e4e951aaed7883933ef68846cc2f6afbd6568bc828b74c718e623bbc3f9f68),ValueParty(attestor2::1220f45606b8884d49bdb9e3ee7cd3fbb6b99adebdb79dee7c8a65dc2dc75259743b),ValueParty(attestor3::12205f11b688d604c0d6e7a9b8721e50913da80df341f8dea9a346d1ae5c4a5e42bf)))\n  Request: PrepareCommand(List(registrar::1220863d0b60f6b14cb5c689877b38c2dd053763aa20d034068c69d040014a8a7c44),List(),List(Command(Create(CreateCommand(Some(Identifier(59d99fdac3639045c97e769304ed80603ba0be0a6bd4b59f13f652b5dde022a4,IBTC.Governance,IBTCGoverna ...\n  DecodedCantonError(\n  code = 'COMMAND_PREPROCESSING_FAILED',\n  category = InvalidIndependentOfSystemState,\n  cause = \"mismatching type: DA.Set.Types:Set Party and value: ValueList(FrontStack(ValueParty(attestor1::1220c0e4e951aaed7883933ef68846cc2f6afbd6568bc828b74c718e623bbc3f9f68),ValueParty(attestor2::1220f45606b8884d49bdb9e3ee7cd3fbb6b99adebdb79dee7c8a65dc2dc75259743b),ValueParty(attestor3::12205f11b688d604c0d6e7a9b8721e50913da80df341f8dea9a346d1ae5c4a5e42bf)))\",\n  traceId = '6c11901ca99ea98a41726b9934007454',\n  context = Seq(\n    'participant=>'participant1'',\n    'definite_answer=>false',\n    'commands=>{readAs: [], deduplicationPeriod: {duration: 'PT168H'}, submittedAt: '2025-05-22T14:34:02.199350Z', submissionId: , actAs: ['registrar::1220863d0b60f6b14cb5c689877b38c2dd053763aa20d034068c69d040014a8a7c44'], commandId: 'create-contracts', userId: 'CoordinatorUser', workflowId: }'\n  )\n)\n  Command BaseLedgerApiAdministration$ledger_api$interactive_submission$.prepare invoked from cmd11.sc:1\ncom.digitalasset.canton.console.CommandFailure: Command execution failed.```\nUnderstandably since Governance takes a `members : Set Party`\n\nI might give up here and focus on other things while you guys chime in :smile: I know you are busy, much appreciated :pray:",
        "team": "T05FWTX7PMG",
        "user_team": "T05FWTX7PMG",
        "source_team": "T05FWTX7PMG",
        "user_profile": {
            "avatar_hash": "88f054e6b2e2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-04-15\/8759384805844_88f054e6b2e25bb0bd26_72.jpg",
            "first_name": "Robert",
            "real_name": "Robert Tera",
            "display_name": "Robert Tera",
            "team": "T05FWTX7PMG",
            "name": "robert",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1747731109.384529",
        "parent_user_id": "U088UV6MKFE",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "W9soX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ah next finding:\nIf I change it to "
                            },
                            {
                                "type": "text",
                                "text": "List(attestor1,..",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " that line succeeds, but the "
                            },
                            {
                                "type": "text",
                                "text": "prepare",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " step fails, with\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "ERROR c.d.c.c.ConsoleEnvironment - Request failed for participant1.\n  GrpcClientError: INVALID_ARGUMENT\/COMMAND_PREPROCESSING_FAILED(8,6c11901c): mismatching type: DA.Set.Types:Set Party and value: ValueList(FrontStack(ValueParty(attestor1::1220c0e4e951aaed7883933ef68846cc2f6afbd6568bc828b74c718e623bbc3f9f68),ValueParty(attestor2::1220f45606b8884d49bdb9e3ee7cd3fbb6b99adebdb79dee7c8a65dc2dc75259743b),ValueParty(attestor3::12205f11b688d604c0d6e7a9b8721e50913da80df341f8dea9a346d1ae5c4a5e42bf)))\n  Request: PrepareCommand(List(registrar::1220863d0b60f6b14cb5c689877b38c2dd053763aa20d034068c69d040014a8a7c44),List(),List(Command(Create(CreateCommand(Some(Identifier(59d99fdac3639045c97e769304ed80603ba0be0a6bd4b59f13f652b5dde022a4,IBTC.Governance,IBTCGoverna ...\n  DecodedCantonError(\n  code = 'COMMAND_PREPROCESSING_FAILED',\n  category = InvalidIndependentOfSystemState,\n  cause = \"mismatching type: DA.Set.Types:Set Party and value: ValueList(FrontStack(ValueParty(attestor1::1220c0e4e951aaed7883933ef68846cc2f6afbd6568bc828b74c718e623bbc3f9f68),ValueParty(attestor2::1220f45606b8884d49bdb9e3ee7cd3fbb6b99adebdb79dee7c8a65dc2dc75259743b),ValueParty(attestor3::12205f11b688d604c0d6e7a9b8721e50913da80df341f8dea9a346d1ae5c4a5e42bf)))\",\n  traceId = '6c11901ca99ea98a41726b9934007454',\n  context = Seq(\n    'participant=>'participant1'',\n    'definite_answer=>false',\n    'commands=>{readAs: [], deduplicationPeriod: {duration: 'PT168H'}, submittedAt: '2025-05-22T14:34:02.199350Z', submissionId: , actAs: ['registrar::1220863d0b60f6b14cb5c689877b38c2dd053763aa20d034068c69d040014a8a7c44'], commandId: 'create-contracts', userId: 'CoordinatorUser', workflowId: }'\n  )\n)\n  Command BaseLedgerApiAdministration$ledger_api$interactive_submission$.prepare invoked from cmd11.sc:1\ncom.digitalasset.canton.console.CommandFailure: Command execution failed."
                            }
                        ],
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Understandably since Governance takes a "
                            },
                            {
                                "type": "text",
                                "text": "members : Set Party",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n\nI might give up here and focus on other things while you guys chime in "
                            },
                            {
                                "type": "emoji",
                                "name": "smile",
                                "unicode": "1f604"
                            },
                            {
                                "type": "text",
                                "text": " I know you are busy, much appreciated "
                            },
                            {
                                "type": "emoji",
                                "name": "pray",
                                "unicode": "1f64f"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U088UV6MKFE",
        "type": "message",
        "ts": "1747926406.913729",
        "client_msg_id": "3cc59209-82d7-435c-83b1-69c9df2893a8",
        "text": "Thanks! I'll check soon.",
        "team": "T05FWTX7PMG",
        "user_team": "T05FWTX7PMG",
        "source_team": "T05FWTX7PMG",
        "user_profile": {
            "avatar_hash": "88f054e6b2e2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-04-15\/8759384805844_88f054e6b2e25bb0bd26_72.jpg",
            "first_name": "Robert",
            "real_name": "Robert Tera",
            "display_name": "Robert Tera",
            "team": "T05FWTX7PMG",
            "name": "robert",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1747731109.384529",
        "parent_user_id": "U088UV6MKFE",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LFWdX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks! I'll check soon."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U088UV6MKFE",
        "type": "message",
        "ts": "1747926478.169529",
        "client_msg_id": "efae8baa-bc79-4fe0-94a0-753a04f34240",
        "text": "&gt;  You may also wanna consider whether you have an easier time doing this from a python script or whatever but your choice.\nYeah I was wondering also when we distribute these signing requests for our third party ops, how exactly will we get these signatures off their nodes -- I assume with a sh or python script, so\n\nbut we'll burn that bridge when we get there",
        "team": "T05FWTX7PMG",
        "user_team": "T05FWTX7PMG",
        "source_team": "T05FWTX7PMG",
        "user_profile": {
            "avatar_hash": "88f054e6b2e2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-04-15\/8759384805844_88f054e6b2e25bb0bd26_72.jpg",
            "first_name": "Robert",
            "real_name": "Robert Tera",
            "display_name": "Robert Tera",
            "team": "T05FWTX7PMG",
            "name": "robert",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1747731109.384529",
        "parent_user_id": "U088UV6MKFE",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wNH4K",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": " You may also wanna consider whether you have an easier time doing this from a python script or whatever but your choice."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah I was wondering also when we distribute these signing requests for our third party ops, how exactly will we get these signatures off their nodes -- I assume with a sh or python script, so\n\nbut we'll burn that bridge when we get there"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]