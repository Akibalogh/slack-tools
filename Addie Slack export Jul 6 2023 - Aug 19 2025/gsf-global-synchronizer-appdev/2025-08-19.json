[
    {
        "user": "U02KJ7PKHN2",
        "type": "message",
        "ts": "1755587084.567219",
        "client_msg_id": "ac055d56-7bd7-43ac-867f-08e584f03a2e",
        "text": "Hi Ben!\n\nI believe you need to select the correct output format:\n• `ACS_DELTA` only gives you archives and created\n• `LEDGER_EFFECTS` should give you the exercise nodes as well",
        "team": "T05FWTX7PMG",
        "user_team": "T03T53E10",
        "source_team": "T03T53E10",
        "user_profile": {
            "avatar_hash": "4e78a4bb88b1",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-11-01\/2671109471619_4e78a4bb88b1d5b788a8_72.jpg",
            "first_name": "Matteo",
            "real_name": "Matteo Limberto",
            "display_name": "Matteo Limberto",
            "team": "T03T53E10",
            "name": "matteo.limberto",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1755562039.403499",
        "parent_user_id": "U012DRCTM61",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "oZ3rL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi Ben!\n\nI believe you need to select the correct output format:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "ACS_DELTA",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " only gives you archives and created"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "LEDGER_EFFECTS",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " should give you the exercise nodes as well"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    }
                ]
            }
        ],
        "language": {
            "locale": "en",
            "is_reliable": true
        }
    },
    {
        "user": "U0735T8NZFE",
        "type": "message",
        "ts": "1755595806.119399",
        "client_msg_id": "9d2fda0a-3184-4561-8c86-0df5a003b271",
        "text": "Hi <@U0PQ8E25D> I'm experiencing an issue where the AppUser tenant disappears after restarting the backend service. It seems the tenant is only created temporarily by the oauth2.sh script during docker compose up and is not persisted by the backend. Is that normal behavior in the Quickstart?",
        "team": "T05FWTX7PMG",
        "user_team": "T072736KDTK",
        "source_team": "T072736KDTK",
        "user_profile": {
            "avatar_hash": "g906650e489f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/906650e489f6c4e96635ae5b3c87738f.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "vinh",
            "real_name": "vinh mike",
            "display_name": "vinh mike",
            "team": "T072736KDTK",
            "name": "vinh.mai",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1755595806.119399",
        "reply_count": 8,
        "reply_users_count": 5,
        "latest_reply": "1755622523.691989",
        "reply_users": [
            "U0PQ8E25D",
            "U0122RHUD2A",
            "U0735T8NZFE",
            "U02SR6E8Z9S",
            "U0775F4CRQT"
        ],
        "replies": [
            {
                "user": "U0PQ8E25D",
                "ts": "1755595905.723469"
            },
            {
                "user": "U0122RHUD2A",
                "ts": "1755603032.949029"
            },
            {
                "user": "U0735T8NZFE",
                "ts": "1755605899.814609"
            },
            {
                "user": "U02SR6E8Z9S",
                "ts": "1755612408.583449"
            },
            {
                "user": "U02SR6E8Z9S",
                "ts": "1755612442.210949"
            },
            {
                "user": "U0735T8NZFE",
                "ts": "1755615145.553699"
            },
            {
                "user": "U0775F4CRQT",
                "ts": "1755615220.449219"
            },
            {
                "user": "U0775F4CRQT",
                "ts": "1755622523.691989"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "AGF\/e",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi "
                            },
                            {
                                "type": "user",
                                "user_id": "U0PQ8E25D"
                            },
                            {
                                "type": "text",
                                "text": " I'm experiencing an issue where the AppUser tenant disappears after restarting the backend service. It seems the tenant is only created temporarily by the oauth2.sh script during docker compose up and is not persisted by the backend. Is that normal behavior in the Quickstart?"
                            }
                        ]
                    }
                ]
            }
        ],
        "language": {
            "locale": "en",
            "is_reliable": true
        }
    },
    {
        "user": "U0PQ8E25D",
        "type": "message",
        "ts": "1755595905.723469",
        "client_msg_id": "d8aab71e-5ea9-4a2d-8f8d-44c9b71be77b",
        "text": "<@U02SR6E8Z9S> can you help.",
        "team": "T05FWTX7PMG",
        "user_team": "T03T53E10",
        "source_team": "T03T53E10",
        "user_profile": {
            "avatar_hash": "c6facf15dae2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-25\/1906342699428_c6facf15dae249470e71_72.jpg",
            "first_name": "Simon",
            "real_name": "Simon Meier",
            "display_name": "simon",
            "team": "T03T53E10",
            "name": "simon",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1755595806.119399",
        "parent_user_id": "U0735T8NZFE",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xiM\/J",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U02SR6E8Z9S"
                            },
                            {
                                "type": "text",
                                "text": " can you help."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0122RHUD2A",
        "type": "message",
        "ts": "1755603032.949029",
        "client_msg_id": "6e0aa61f-aa2d-4b9c-93a5-08044c0f54e0",
        "text": "If you are using a relatively recent version of Quickstart, you can run `make restart-backend`, which will re-register the *app-user* tenant. Persistent storage is on our roadmap, but has not yet been implemented.",
        "team": "T05FWTX7PMG",
        "user_team": "T03T53E10",
        "source_team": "T03T53E10",
        "user_profile": {
            "avatar_hash": "f323bd2b8079",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-04-22\/1090389769617_f323bd2b807965503456_72.png",
            "first_name": "Peter",
            "real_name": "Peter Kvokacka",
            "display_name": "peter.kvokacka",
            "team": "T03T53E10",
            "name": "peter.kvokacka",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1755595806.119399",
        "parent_user_id": "U0735T8NZFE",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4jAkk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If you are using a relatively recent version of Quickstart, you can run "
                            },
                            {
                                "type": "text",
                                "text": "make restart-backend",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", which will re-register the "
                            },
                            {
                                "type": "text",
                                "text": "app-user",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " tenant. Persistent storage is on our roadmap, but has not yet been implemented."
                            }
                        ]
                    }
                ]
            }
        ],
        "language": {
            "locale": "en",
            "is_reliable": true
        }
    },
    {
        "subtype": "bot_message",
        "text": "*rohan* from *Openvector* was added to this channel by *operations*. You can review their permissions in Channel Details. Happy collaborating!",
        "user": "USLACKBOT",
        "username": "slackbot",
        "type": "message",
        "ts": "1755605540.036979",
        "team": "T05FWTX7PMG",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9kG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "rohan",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " from "
                            },
                            {
                                "type": "text",
                                "text": "Openvector",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " was added to this channel by "
                            },
                            {
                                "type": "text",
                                "text": "operations",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". You can review their permissions in Channel Details. Happy collaborating!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0735T8NZFE",
        "type": "message",
        "ts": "1755605899.814609",
        "client_msg_id": "6ddd8f54-bb99-484b-9697-3c8d1e5f2901",
        "text": "<@U0122RHUD2A>  got it, thanks a lot!",
        "team": "T05FWTX7PMG",
        "user_team": "T072736KDTK",
        "source_team": "T072736KDTK",
        "user_profile": {
            "avatar_hash": "g906650e489f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/906650e489f6c4e96635ae5b3c87738f.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "vinh",
            "real_name": "vinh mike",
            "display_name": "vinh mike",
            "team": "T072736KDTK",
            "name": "vinh.mai",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1755595806.119399",
        "parent_user_id": "U0735T8NZFE",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4U5MU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U0122RHUD2A"
                            },
                            {
                                "type": "text",
                                "text": "  got it, thanks a lot!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U05E2CM37H6",
        "type": "message",
        "ts": "1755606691.432769",
        "client_msg_id": "7c437830-82f5-44e0-a455-0c5ac8c12229",
        "text": "Not that I'm aware of. I'm able to run the network with swagger. I assume the network + console can run concurrently?",
        "team": "T05FWTX7PMG",
        "user_team": "T01LU8PQFK7",
        "source_team": "T01LU8PQFK7",
        "user_profile": {
            "avatar_hash": "9e6029dc7fb8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-06-22\/5464887386197_9e6029dc7fb8e34033a2_72.png",
            "first_name": "Alex",
            "real_name": "Alex Miller",
            "display_name": "alex",
            "team": "T01LU8PQFK7",
            "name": "alex",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1755555911.224169",
        "parent_user_id": "U05E2CM37H6",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "i2Q5G",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Not that I'm aware of. I'm able to run the network with swagger. I assume the network + console can run concurrently?"
                            }
                        ]
                    }
                ]
            }
        ],
        "language": {
            "locale": "en",
            "is_reliable": true
        }
    },
    {
        "user": "U0122RHUD2A",
        "type": "message",
        "ts": "1755608190.335189",
        "client_msg_id": "0f57e959-84ba-4972-873e-b8da78f15251",
        "text": "That is strange as this command that you say is working for you\n```docker compose --env-file $LOCALNET_DIR\/compose.env \\\n               --env-file $LOCALNET_DIR\/env\/common.env \\\n               -f $LOCALNET_DIR\/compose.yaml \\\n               -f $LOCALNET_DIR\/resource-constraints.yaml \\\n               --profile sv \\\n               --profile app-provider \\\n               --profile app-user \\\n               --profile swagger-ui up -d```\nis using exactly the same docker compose,yaml file and exactly the same environment as\n```docker compose --env-file $LOCALNET_DIR\/compose.env \\\n               --env-file $LOCALNET_DIR\/env\/common.env \\\n               -f $LOCALNET_DIR\/compose.yaml \\\n               -f $LOCALNET_DIR\/resource-constraints.yaml \\\n               run --rm console```\nwhy would first command be able to resolve `AUTH_APP_PROVIDER_VALIDATOR_USER_NAME` but the second not :thinking_face:",
        "team": "T05FWTX7PMG",
        "user_team": "T03T53E10",
        "source_team": "T03T53E10",
        "user_profile": {
            "avatar_hash": "f323bd2b8079",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-04-22\/1090389769617_f323bd2b807965503456_72.png",
            "first_name": "Peter",
            "real_name": "Peter Kvokacka",
            "display_name": "peter.kvokacka",
            "team": "T03T53E10",
            "name": "peter.kvokacka",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1755555911.224169",
        "parent_user_id": "U05E2CM37H6",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jm8pb",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That is strange as this command that you say is working for you\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "docker compose --env-file $LOCALNET_DIR\/compose.env \\\n               --env-file $LOCALNET_DIR\/env\/common.env \\\n               -f $LOCALNET_DIR\/compose.yaml \\\n               -f $LOCALNET_DIR\/resource-constraints.yaml \\\n               --profile sv \\\n               --profile app-provider \\\n               --profile app-user \\\n               --profile swagger-ui up -d"
                            }
                        ],
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "is using exactly the same docker compose,yaml file and exactly the same environment as\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "docker compose --env-file $LOCALNET_DIR\/compose.env \\\n               --env-file $LOCALNET_DIR\/env\/common.env \\\n               -f $LOCALNET_DIR\/compose.yaml \\\n               -f $LOCALNET_DIR\/resource-constraints.yaml \\\n               run --rm console"
                            }
                        ],
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "why would first command be able to resolve "
                            },
                            {
                                "type": "text",
                                "text": "AUTH_APP_PROVIDER_VALIDATOR_USER_NAME",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " but the second not "
                            },
                            {
                                "type": "emoji",
                                "name": "thinking_face",
                                "unicode": "1f914"
                            }
                        ]
                    }
                ]
            }
        ],
        "language": {
            "locale": "en",
            "is_reliable": true
        }
    },
    {
        "user": "U05E2CM37H6",
        "type": "message",
        "ts": "1755609217.993089",
        "client_msg_id": "192b10cd-cc3e-4b64-9697-6b6d24964224",
        "text": "Indeed, that is what I don't understand\n\n```[INFO] Starting Splice network...\ndocker compose         --env-file \"\/Users\/alex\/Tools\/signing-pipelines\/canton-wallet-util\/splice\/cluster\/compose\/localnet\/compose.env\"         --env-file \"\/Users\/alex\/Tools\/signing-pipelines\/canton-wallet-util\/splice\/cluster\/compose\/localnet\/env\/common.env\"         -f \"\/Users\/alex\/Tools\/signing-pipelines\/canton-wallet-util\/splice\/cluster\/compose\/localnet\/compose.yaml\"         -f \"\/Users\/alex\/Tools\/signing-pipelines\/canton-wallet-util\/splice\/cluster\/compose\/localnet\/resource-constraints.yaml\"         --profile sv         --profile app-provider         --profile app-user         --profile swagger-ui up -d\n[+] Running 14\/14\n ✔ Volume \"localnet_postgres\"             Created                                                    0.0s\n ✔ Volume \"localnet_domain-upgrade-dump\"  Created                                                    0.0s\n ✔ Container postgres                     Healthy                                                    5.8s\n ✔ Container wallet-web-ui-app-provider   Healthy                                                   30.6s\n ✔ Container sv-web-ui                    Started                                                    0.3s\n ✔ Container ans-web-ui-app-provider      Started                                                    0.3s\n ✔ Container scan-web-ui                  Started                                                    0.3s\n ✔ Container wallet-web-ui-sv             Healthy                                                   30.6s\n ✔ Container swagger-ui                   Started                                                    0.4s\n ✔ Container wallet-web-ui-app-user       Healthy                                                   30.6s\n ✔ Container ans-web-ui-app-user          Started                                                    0.3s\n ✔ Container canton                       Healthy                                                   16.4s\n ✔ Container splice                       Healthy                                                  127.5s\n ✔ Container nginx                        Started                                                  127.6s\ndocker compose         --env-file \"\/Users\/alex\/Tools\/signing-pipelines\/canton-wallet-util\/splice\/cluster\/compose\/localnet\/compose.env\"         --env-file \"\/Users\/alex\/Tools\/signing-pipelines\/canton-wallet-util\/splice\/cluster\/compose\/localnet\/env\/common.env\"         -f \"\/Users\/alex\/Tools\/signing-pipelines\/canton-wallet-util\/splice\/cluster\/compose\/localnet\/compose.yaml\"         -f \"\/Users\/alex\/Tools\/signing-pipelines\/canton-wallet-util\/splice\/cluster\/compose\/localnet\/resource-constraints.yaml\"         run --rm console\n\/app\/entrypoint.sh: line 13: AUTH_APP_PROVIDER_VALIDATOR_USER_NAME: unbound variable```",
        "team": "T05FWTX7PMG",
        "user_team": "T01LU8PQFK7",
        "source_team": "T01LU8PQFK7",
        "user_profile": {
            "avatar_hash": "9e6029dc7fb8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-06-22\/5464887386197_9e6029dc7fb8e34033a2_72.png",
            "first_name": "Alex",
            "real_name": "Alex Miller",
            "display_name": "alex",
            "team": "T01LU8PQFK7",
            "name": "alex",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1755555911.224169",
        "parent_user_id": "U05E2CM37H6",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "osSHN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Indeed, that is what I don't understand\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[INFO] Starting Splice network...\ndocker compose         --env-file \"\/Users\/alex\/Tools\/signing-pipelines\/canton-wallet-util\/splice\/cluster\/compose\/localnet\/compose.env\"         --env-file \"\/Users\/alex\/Tools\/signing-pipelines\/canton-wallet-util\/splice\/cluster\/compose\/localnet\/env\/common.env\"         -f \"\/Users\/alex\/Tools\/signing-pipelines\/canton-wallet-util\/splice\/cluster\/compose\/localnet\/compose.yaml\"         -f \"\/Users\/alex\/Tools\/signing-pipelines\/canton-wallet-util\/splice\/cluster\/compose\/localnet\/resource-constraints.yaml\"         --profile sv         --profile app-provider         --profile app-user         --profile swagger-ui up -d\n[+] Running 14\/14\n ✔ Volume \"localnet_postgres\"             Created                                                    0.0s\n ✔ Volume \"localnet_domain-upgrade-dump\"  Created                                                    0.0s\n ✔ Container postgres                     Healthy                                                    5.8s\n ✔ Container wallet-web-ui-app-provider   Healthy                                                   30.6s\n ✔ Container sv-web-ui                    Started                                                    0.3s\n ✔ Container ans-web-ui-app-provider      Started                                                    0.3s\n ✔ Container scan-web-ui                  Started                                                    0.3s\n ✔ Container wallet-web-ui-sv             Healthy                                                   30.6s\n ✔ Container swagger-ui                   Started                                                    0.4s\n ✔ Container wallet-web-ui-app-user       Healthy                                                   30.6s\n ✔ Container ans-web-ui-app-user          Started                                                    0.3s\n ✔ Container canton                       Healthy                                                   16.4s\n ✔ Container splice                       Healthy                                                  127.5s\n ✔ Container nginx                        Started                                                  127.6s\ndocker compose         --env-file \"\/Users\/alex\/Tools\/signing-pipelines\/canton-wallet-util\/splice\/cluster\/compose\/localnet\/compose.env\"         --env-file \"\/Users\/alex\/Tools\/signing-pipelines\/canton-wallet-util\/splice\/cluster\/compose\/localnet\/env\/common.env\"         -f \"\/Users\/alex\/Tools\/signing-pipelines\/canton-wallet-util\/splice\/cluster\/compose\/localnet\/compose.yaml\"         -f \"\/Users\/alex\/Tools\/signing-pipelines\/canton-wallet-util\/splice\/cluster\/compose\/localnet\/resource-constraints.yaml\"         run --rm console\n\/app\/entrypoint.sh: line 13: AUTH_APP_PROVIDER_VALIDATOR_USER_NAME: unbound variable"
                            }
                        ],
                        "border": 0
                    }
                ]
            }
        ]
    },
    {
        "user": "U0122RHUD2A",
        "type": "message",
        "ts": "1755609729.240969",
        "client_msg_id": "dec3054c-3126-492a-8349-2745d3f6e369",
        "text": "Hmm if I do the same it works just fine.\nwhat version of docker do you use and what OS?",
        "team": "T05FWTX7PMG",
        "user_team": "T03T53E10",
        "source_team": "T03T53E10",
        "user_profile": {
            "avatar_hash": "f323bd2b8079",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-04-22\/1090389769617_f323bd2b807965503456_72.png",
            "first_name": "Peter",
            "real_name": "Peter Kvokacka",
            "display_name": "peter.kvokacka",
            "team": "T03T53E10",
            "name": "peter.kvokacka",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1755555911.224169",
        "parent_user_id": "U05E2CM37H6",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "T3SCJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hmm if I do the same it works just fine.\nwhat version of docker do you use and what OS?"
                            }
                        ]
                    }
                ]
            }
        ],
        "language": {
            "locale": "en",
            "is_reliable": true
        }
    },
    {
        "user": "U05E2CM37H6",
        "type": "message",
        "ts": "1755610594.015429",
        "client_msg_id": "aeecc851-487f-44a1-91dc-79c741388550",
        "text": "Hah, I updated my docker and now it works. Thanks for the sanity check :slightly_smiling_face:",
        "team": "T05FWTX7PMG",
        "user_team": "T01LU8PQFK7",
        "source_team": "T01LU8PQFK7",
        "user_profile": {
            "avatar_hash": "9e6029dc7fb8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-06-22\/5464887386197_9e6029dc7fb8e34033a2_72.png",
            "first_name": "Alex",
            "real_name": "Alex Miller",
            "display_name": "alex",
            "team": "T01LU8PQFK7",
            "name": "alex",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1755555911.224169",
        "parent_user_id": "U05E2CM37H6",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "UElTo",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hah, I updated my docker and now it works. Thanks for the sanity check "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ],
        "language": {
            "locale": "en",
            "is_reliable": true
        },
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U0122RHUD2A"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U096LNVF4TT",
        "type": "message",
        "ts": "1755610928.653479",
        "edited": {
            "user": "U096LNVF4TT",
            "ts": "1755611268.000000"
        },
        "client_msg_id": "e5982e9e-1bfa-447f-8768-9eef669d28b6",
        "text": "Hi Team, we are trying to onboard external party on our validator by using the external signing API: <https:\/\/docs.dev.sync.global\/app_dev\/validator_api\/index.html#external-signing-api>\nWe created one ed25519 keypair, and generated a party id using the \/v0\/admin\/external-party\/topology\/generate and the newly created public key\n```curl -sS -X POST \"$VAL_API\/v0\/admin\/external-party\/topology\/generate\" \\ -H \"$AUTHZ\" -H \"content-type: application\/json\" \\ -d @- <<EOF | tee gen.json { \"party_hint\": \"$PARTY_HINT\", \"public_key\": \"$TENANT_PUB_HEX\" } EOF ```\nAfter that we setup a signer to sign the transaction hash that was generated by \/v0\/admin\/external-party\/topology\/generate using the corresponding newly created private key; but when we are trying to use the API \/v0\/admin\/external-party\/topology\/submit, we're facing error:\n\n```\"An error occurred. Please contact the operator and inquire about the request 64fe96f4df2c298753d5e547362742f0 with tid 64fe96f4df2c298753d5e547362742f0\"```\nThis is the how we  have used the API:\n```curl -sS -X POST \"$VAL_API\/v0\/admin\/external-party\/topology\/submit\" -H \"$AUTHZ\" -H \"content-type: application\/json\" -d @submit.json | tee submit_resp.json```\nwhere $VAL_API is the url of our validator(<http:\/\/wallet.validator.hostname\/>) and submit.json consist of public key hex, party id and signed topology txns (topology_txn and signed_hash)\n\nCan someone please help in this? Is our flow correct? Or are we missing any argument?",
        "team": "T05FWTX7PMG",
        "user_team": "T07DE2TU0DQ",
        "source_team": "T07DE2TU0DQ",
        "user_profile": {
            "avatar_hash": "g0d987863921",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/0d98786392141201c0cb85087c3aada7.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "Vanshika",
            "real_name": "Vanshika Bhatt",
            "display_name": "Vanshika Bhatt",
            "team": "T07DE2TU0DQ",
            "name": "vanshika.b",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "T+\/Xy",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi Team, we are trying to onboard external party on our validator by using the external signing API: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/docs.dev.sync.global\/app_dev\/validator_api\/index.html#external-signing-api"
                            },
                            {
                                "type": "text",
                                "text": "\nWe created one ed25519 keypair, and generated a party id using the \/v0\/admin\/external-party\/topology\/generate and the newly created public key\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "curl -sS -X POST \"$VAL_API\/v0\/admin\/external-party\/topology\/generate\" \\ -H \"$AUTHZ\" -H \"content-type: application\/json\" \\ -d @- <<EOF | tee gen.json { \"party_hint\": \"$PARTY_HINT\", \"public_key\": \"$TENANT_PUB_HEX\" } EOF "
                            }
                        ],
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nAfter that we setup a signer to sign the transaction hash that was generated by \/v0\/admin\/external-party\/topology\/generate using the corresponding newly created private key; but when we are trying to use the API \/v0\/admin\/external-party\/topology\/submit, we're facing error:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\"An error occurred. Please contact the operator and inquire about the request 64fe96f4df2c298753d5e547362742f0 with tid 64fe96f4df2c298753d5e547362742f0\""
                            }
                        ],
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nThis is the how we  have used the API:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "curl -sS -X POST \"$VAL_API\/v0\/admin\/external-party\/topology\/submit\" -H \"$AUTHZ\" -H \"content-type: application\/json\" -d @submit.json | tee submit_resp.json"
                            }
                        ],
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "where $VAL_API is the url of our validator("
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/wallet.validator.hostname\/"
                            },
                            {
                                "type": "text",
                                "text": ") and submit.json consist of public key hex, party id and signed topology txns (topology_txn and signed_hash)\n\nCan someone please help in this? Is our flow correct? Or are we missing any argument?"
                            }
                        ]
                    }
                ]
            }
        ],
        "language": {
            "locale": "en",
            "is_reliable": true
        }
    },
    {
        "user": "U03PNLM5D7X",
        "type": "message",
        "ts": "1755611512.480099",
        "client_msg_id": "86a93bd8-96e6-4f6e-8e20-a4da8564d60e",
        "text": "Thanks.\nGot it working by removing the “actAs” from the token and instead granting access using the console:\n```sv.ledger_api.users.rights.grant(\n  id = \"ledger-api-user\",\n  actAs = Set(PartyId.tryFromProtoPrimitive(\"alice::12202b0107cc6af1aa7f0159a67c7b57c4f7ef07231f13a179ff7b1c0370a637015c\")),\n  readAs = Set(PartyId.tryFromProtoPrimitive(\"alice::12202b0107cc6af1aa7f0159a67c7b57c4f7ef07231f13a179ff7b1c0370a637015c\"))\n)```\n",
        "team": "T05FWTX7PMG",
        "user_team": "T6M7W6BGQ",
        "source_team": "T6M7W6BGQ",
        "user_profile": {
            "avatar_hash": "e6e5c07d16d7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-12-20\/4532027686551_e6e5c07d16d7ccec55f6_72.jpg",
            "first_name": "Thomas",
            "real_name": "Thomas Jakobsen",
            "display_name": "tjakobsen",
            "team": "T6M7W6BGQ",
            "name": "tjakobsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1755263752.515029",
        "parent_user_id": "U03PNLM5D7X",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ct7Ir",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks.\nGot it working by removing the “actAs” from the token and instead granting access using the console:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "sv.ledger_api.users.rights.grant(\n  id = \"ledger-api-user\",\n  actAs = Set(PartyId.tryFromProtoPrimitive(\"alice::12202b0107cc6af1aa7f0159a67c7b57c4f7ef07231f13a179ff7b1c0370a637015c\")),\n  readAs = Set(PartyId.tryFromProtoPrimitive(\"alice::12202b0107cc6af1aa7f0159a67c7b57c4f7ef07231f13a179ff7b1c0370a637015c\"))\n)"
                            }
                        ],
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": []
                    }
                ]
            }
        ],
        "language": {
            "locale": "en",
            "is_reliable": true
        }
    },
    {
        "user": "U02SR6E8Z9S",
        "type": "message",
        "ts": "1755612408.583449",
        "client_msg_id": "0e3981cd-f058-476a-94dc-392d5fd236f2",
        "text": "<@U0775F4CRQT> FYI",
        "team": "T05FWTX7PMG",
        "user_team": "T03T53E10",
        "source_team": "T03T53E10",
        "user_profile": {
            "avatar_hash": "f9fc9f38d8d9",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-01-31\/3044385429553_f9fc9f38d8d90c37b2c2_72.jpg",
            "first_name": "Curtis",
            "real_name": "Curtis Hrischuk",
            "display_name": "Curtis",
            "team": "T03T53E10",
            "name": "curtis.hrischuk",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1755595806.119399",
        "parent_user_id": "U0735T8NZFE",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9hbMF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U0775F4CRQT"
                            },
                            {
                                "type": "text",
                                "text": " FYI"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02SR6E8Z9S",
        "type": "message",
        "ts": "1755612442.210949",
        "client_msg_id": "a6605fde-584f-4604-8dd5-24a247f24aba",
        "text": "<@U0735T8NZFE> please feel free to ping me with any Quickstart related questions.",
        "team": "T05FWTX7PMG",
        "user_team": "T03T53E10",
        "source_team": "T03T53E10",
        "user_profile": {
            "avatar_hash": "f9fc9f38d8d9",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-01-31\/3044385429553_f9fc9f38d8d90c37b2c2_72.jpg",
            "first_name": "Curtis",
            "real_name": "Curtis Hrischuk",
            "display_name": "Curtis",
            "team": "T03T53E10",
            "name": "curtis.hrischuk",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1755595806.119399",
        "parent_user_id": "U0735T8NZFE",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2cKCD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U0735T8NZFE"
                            },
                            {
                                "type": "text",
                                "text": " please feel free to ping me with any Quickstart related questions."
                            }
                        ]
                    }
                ]
            }
        ],
        "language": {
            "locale": "en",
            "is_reliable": true
        }
    },
    {
        "user": "U0735T8NZFE",
        "type": "message",
        "ts": "1755615145.553699",
        "client_msg_id": "4151280b-8d34-4838-bff0-bf939a5bb8c2",
        "text": "<@U02SR6E8Z9S> okay, thank you!",
        "team": "T05FWTX7PMG",
        "user_team": "T072736KDTK",
        "source_team": "T072736KDTK",
        "user_profile": {
            "avatar_hash": "g906650e489f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/906650e489f6c4e96635ae5b3c87738f.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "vinh",
            "real_name": "vinh mike",
            "display_name": "vinh mike",
            "team": "T072736KDTK",
            "name": "vinh.mai",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1755595806.119399",
        "parent_user_id": "U0735T8NZFE",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "IOAjk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U02SR6E8Z9S"
                            },
                            {
                                "type": "text",
                                "text": " okay, thank you!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0775F4CRQT",
        "type": "message",
        "ts": "1755615220.449219",
        "client_msg_id": "dd0cc624-641d-47e3-a9c5-d8bae97b51c7",
        "text": "I’ll get this in the FAQ",
        "team": "T05FWTX7PMG",
        "user_team": "T02UWCK3WLS",
        "source_team": "T02UWCK3WLS",
        "user_profile": {
            "avatar_hash": "d356b5df5d40",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-06-10\/7238824364855_d356b5df5d40b08b7c98_72.png",
            "first_name": "JP",
            "real_name": "JP Miller",
            "display_name": "JP Miller",
            "team": "T02UWCK3WLS",
            "name": "jp.miller",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1755595806.119399",
        "parent_user_id": "U0735T8NZFE",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LvLw5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I’ll get this in the FAQ"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0PQ8E25D",
        "type": "message",
        "ts": "1755619145.863959",
        "client_msg_id": "25c90f1a-d8e2-4cf8-a7f9-68f5a442d30f",
        "text": "<@U08987JD1J9> <@U06TMPD96M8> and others working on integrating with the token standard from an app or wallet perspective. We've just merged a docs improvement that might be helpful for your work. It's not the end-state, but it might give you a leg up.\n\nThe improvement will land with the next release on the DevNet docs. In the meantime you can use this docs preview page: <https:\/\/hyperledger-labs.github.io\/splice\/app_dev\/token_standard\/index.html>",
        "team": "T05FWTX7PMG",
        "user_team": "T03T53E10",
        "source_team": "T03T53E10",
        "user_profile": {
            "avatar_hash": "c6facf15dae2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-25\/1906342699428_c6facf15dae249470e71_72.jpg",
            "first_name": "Simon",
            "real_name": "Simon Meier",
            "display_name": "simon",
            "team": "T03T53E10",
            "name": "simon",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1755619145.863959",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1755619424.812369",
        "reply_users": [
            "U08987JD1J9"
        ],
        "replies": [
            {
                "user": "U08987JD1J9",
                "ts": "1755619424.812369"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "EArf2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U08987JD1J9"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "user",
                                "user_id": "U06TMPD96M8"
                            },
                            {
                                "type": "text",
                                "text": " and others working on integrating with the token standard from an app or wallet perspective. We've just merged a docs improvement that might be helpful for your work. It's not the end-state, but it might give you a leg up.\n\nThe improvement will land with the next release on the DevNet docs. In the meantime you can use this docs preview page: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/hyperledger-labs.github.io\/splice\/app_dev\/token_standard\/index.html"
                            }
                        ]
                    }
                ]
            }
        ],
        "language": {
            "locale": "en",
            "is_reliable": true
        },
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U047U17D7KL"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U08987JD1J9",
        "type": "message",
        "ts": "1755619424.812369",
        "client_msg_id": "5db4e42c-090c-410c-9c99-20f870b64c2a",
        "text": "thank you so much <@U0PQ8E25D>",
        "team": "T05FWTX7PMG",
        "user_team": "T08987C1Q77",
        "source_team": "T08987C1Q77",
        "user_profile": {
            "avatar_hash": "99a85730a5ad",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-02-05\/8402823361586_99a85730a5ad57176e25_72.png",
            "first_name": "Vinh",
            "real_name": "Vinh",
            "display_name": "Vinh",
            "team": "T08987C1Q77",
            "name": "vinh",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1755619145.863959",
        "parent_user_id": "U0PQ8E25D",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "HVZYB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "thank you so much "
                            },
                            {
                                "type": "user",
                                "user_id": "U0PQ8E25D"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0775F4CRQT",
        "type": "message",
        "ts": "1755622523.691989",
        "client_msg_id": "33b33704-1798-4caa-a13c-e7546b061d27",
        "text": "<https:\/\/github.com\/digital-asset\/cn-quickstart\/pull\/230>\n<@U02SR6E8Z9S>",
        "team": "T05FWTX7PMG",
        "user_team": "T02UWCK3WLS",
        "source_team": "T02UWCK3WLS",
        "user_profile": {
            "avatar_hash": "d356b5df5d40",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-06-10\/7238824364855_d356b5df5d40b08b7c98_72.png",
            "first_name": "JP",
            "real_name": "JP Miller",
            "display_name": "JP Miller",
            "team": "T02UWCK3WLS",
            "name": "jp.miller",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1755595806.119399",
        "parent_user_id": "U0735T8NZFE",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pMs0g",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/digital-asset\/cn-quickstart\/pull\/230"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "user",
                                "user_id": "U02SR6E8Z9S"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U05E2CM37H6",
        "type": "message",
        "ts": "1755625705.407289",
        "client_msg_id": "d0f0a7fc-83a5-4958-82e5-b53aa3ddad47",
        "text": "I am trying to fetch transactions for an external party using the default Ledger API user on a localnet and am running into permissioning issues similar to the ones mentioned in the <https:\/\/u410-workspace.slack.com\/archives\/C08FQRCRFUN\/p1755263752515029|thread above>.\n\nI don't want to use the console as part of my workflow because we need to support many parties programmatically.\n\nIs there any way to either:\n1. Grant read access to a Ledger API user from the external party's key\n2. Configure the node to allow the API user to read as any party",
        "team": "T05FWTX7PMG",
        "user_team": "T01LU8PQFK7",
        "source_team": "T01LU8PQFK7",
        "user_profile": {
            "avatar_hash": "9e6029dc7fb8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-06-22\/5464887386197_9e6029dc7fb8e34033a2_72.png",
            "first_name": "Alex",
            "real_name": "Alex Miller",
            "display_name": "alex",
            "team": "T01LU8PQFK7",
            "name": "alex",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1755625705.407289",
        "reply_count": 5,
        "reply_users_count": 3,
        "latest_reply": "1755634628.124429",
        "reply_users": [
            "U02SR6E8Z9S",
            "U05E2CM37H6",
            "U0PQ8E25D"
        ],
        "replies": [
            {
                "user": "U02SR6E8Z9S",
                "ts": "1755626292.664559"
            },
            {
                "user": "U05E2CM37H6",
                "ts": "1755626382.260869"
            },
            {
                "user": "U02SR6E8Z9S",
                "ts": "1755627114.361709"
            },
            {
                "user": "U05E2CM37H6",
                "ts": "1755627478.220229"
            },
            {
                "user": "U0PQ8E25D",
                "ts": "1755634628.124429"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tJb2k",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I am trying to fetch transactions for an external party using the default Ledger API user on a localnet and am running into permissioning issues similar to the ones mentioned in the "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/u410-workspace.slack.com\/archives\/C08FQRCRFUN\/p1755263752515029",
                                "text": "thread above"
                            },
                            {
                                "type": "text",
                                "text": ".\n\nI don't want to use the console as part of my workflow because we need to support many parties programmatically.\n\nIs there any way to either:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Grant read access to a Ledger API user from the external party's key"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Configure the node to allow the API user to read as any party"
                                    }
                                ]
                            }
                        ],
                        "style": "ordered",
                        "indent": 0,
                        "border": 0
                    }
                ]
            }
        ],
        "language": {
            "locale": "en",
            "is_reliable": true
        },
        "reactions": [
            {
                "name": "eyes",
                "users": [
                    "U08QSR4HV7Y"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U02SR6E8Z9S",
        "type": "message",
        "ts": "1755626292.664559",
        "client_msg_id": "ec3ef0d8-f772-48f1-a9a3-6a2c1ca83d97",
        "text": "<@U05E2CM37H6> the documentation for the Ledger API says:\n&gt; Canton makes use of tokens on the following APIs:\n&gt; • The public API of Sequencer Nodes mandates the use of tokens for every request.\n&gt; • Operators can configure Participant Nodes to <https:\/\/docs.digitalasset.com\/operate\/3.3\/howtos\/secure\/apis\/jwt.html#ledger-api-jwt-configuration|enable authorization at the Ledger API>. If enabled, clients of a Ledger API need to include a <https:\/\/jwt.io\/|JWT> token into every request.\nDo you have  <https:\/\/docs.digitalasset.com\/operate\/3.3\/howtos\/secure\/apis\/jwt.html#configure-api-authentication-and-authorization-with-jwt|API Authentication and Authorization with JWT >enabled?\nAre you using LocalNet <https:\/\/docs.dev.sync.global\/app_dev\/testing\/localnet.html|directly from the Splice repo >or through the <https:\/\/github.com\/digital-asset\/cn-quickstart|CN application quickstart>?\n\nCC: <@U0122RHUD2A> <@U2KT900HE>",
        "team": "T05FWTX7PMG",
        "user_team": "T03T53E10",
        "source_team": "T03T53E10",
        "user_profile": {
            "avatar_hash": "f9fc9f38d8d9",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-01-31\/3044385429553_f9fc9f38d8d90c37b2c2_72.jpg",
            "first_name": "Curtis",
            "real_name": "Curtis Hrischuk",
            "display_name": "Curtis",
            "team": "T03T53E10",
            "name": "curtis.hrischuk",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1755625705.407289",
        "parent_user_id": "U05E2CM37H6",
        "attachments": [
            {
                "image_url": "https:\/\/jwt.io\/img\/facebook-card.png",
                "image_width": 1200,
                "image_height": 630,
                "image_bytes": 69725,
                "from_url": "https:\/\/jwt.io\/",
                "service_icon": "https:\/\/www.jwt.io\/apple-icon\/57?c8286793fc3e08ca",
                "id": 1,
                "original_url": "https:\/\/jwt.io\/",
                "fallback": "JSON Web Tokens - jwt.io",
                "text": "JSON Web Token (JWT) is a compact URL-safe means of representing claims to be transferred between two parties. The claims in a JWT are encoded as a JSON object that is digitally signed using JSON Web Signature (JWS).",
                "title": "JSON Web Tokens - jwt.io",
                "title_link": "https:\/\/jwt.io\/",
                "service_name": "jwt.io"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "021yy",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U05E2CM37H6"
                            },
                            {
                                "type": "text",
                                "text": " the documentation for the Ledger API says:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Canton makes use of tokens on the following APIs:"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "The public API of Sequencer Nodes mandates the use of tokens for every request."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Operators can configure Participant Nodes to "
                                    },
                                    {
                                        "type": "link",
                                        "url": "https:\/\/docs.digitalasset.com\/operate\/3.3\/howtos\/secure\/apis\/jwt.html#ledger-api-jwt-configuration",
                                        "text": "enable authorization at the Ledger API"
                                    },
                                    {
                                        "type": "text",
                                        "text": ". If enabled, clients of a Ledger API need to include a "
                                    },
                                    {
                                        "type": "link",
                                        "url": "https:\/\/jwt.io\/",
                                        "text": "JWT"
                                    },
                                    {
                                        "type": "text",
                                        "text": " token into every request."
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 1
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nDo you have  "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/docs.digitalasset.com\/operate\/3.3\/howtos\/secure\/apis\/jwt.html#configure-api-authentication-and-authorization-with-jwt",
                                "text": "API Authentication and Authorization with JWT "
                            },
                            {
                                "type": "text",
                                "text": "enabled?\nAre you using LocalNet "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/docs.dev.sync.global\/app_dev\/testing\/localnet.html",
                                "text": "directly from the Splice repo "
                            },
                            {
                                "type": "text",
                                "text": "or through the "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/digital-asset\/cn-quickstart",
                                "text": "CN application quickstart"
                            },
                            {
                                "type": "text",
                                "text": "?\n\nCC: "
                            },
                            {
                                "type": "user",
                                "user_id": "U0122RHUD2A"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "user",
                                "user_id": "U2KT900HE"
                            }
                        ]
                    }
                ]
            }
        ],
        "language": {
            "locale": "en",
            "is_reliable": true
        }
    },
    {
        "user": "U05E2CM37H6",
        "type": "message",
        "ts": "1755626382.260869",
        "edited": {
            "user": "U05E2CM37H6",
            "ts": "1755626423.000000"
        },
        "client_msg_id": "0a9d84eb-a1b4-45be-9b67-8da9f96f1e43",
        "text": "Yes I am using JWT tokens in each request but am just not able to read party-based data:\n\n```\"PERMISSION_DENIED(7,56311422): Claims do not authorize to read data for party '<party_id>'```\nI'm using LocalNet from the Splice repo directly via <https:\/\/docs.sync.global\/app_dev\/testing\/localnet.html|these> commands",
        "team": "T05FWTX7PMG",
        "user_team": "T01LU8PQFK7",
        "source_team": "T01LU8PQFK7",
        "user_profile": {
            "avatar_hash": "9e6029dc7fb8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-06-22\/5464887386197_9e6029dc7fb8e34033a2_72.png",
            "first_name": "Alex",
            "real_name": "Alex Miller",
            "display_name": "alex",
            "team": "T01LU8PQFK7",
            "name": "alex",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1755625705.407289",
        "parent_user_id": "U05E2CM37H6",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "AimsR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes I am using JWT tokens in each request but am just not able to read party-based data:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\"PERMISSION_DENIED(7,56311422): Claims do not authorize to read data for party '<party_id>'"
                            }
                        ],
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nI'm using LocalNet from the Splice repo directly via "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/docs.sync.global\/app_dev\/testing\/localnet.html",
                                "text": "these"
                            },
                            {
                                "type": "text",
                                "text": " commands"
                            }
                        ]
                    }
                ]
            }
        ],
        "language": {
            "locale": "en",
            "is_reliable": true
        }
    },
    {
        "user": "U02SR6E8Z9S",
        "type": "message",
        "ts": "1755627114.361709",
        "client_msg_id": "ab7daebc-76c7-46ef-a76f-c8009e6e70a5",
        "text": "Thanks.  Apology for asking but I was wondering if you followed the <https:\/\/docs.sync.global\/validator_operator\/validator_helm.html#configuring-authentication|Configuring Authentication recommendations>.",
        "team": "T05FWTX7PMG",
        "user_team": "T03T53E10",
        "source_team": "T03T53E10",
        "user_profile": {
            "avatar_hash": "f9fc9f38d8d9",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-01-31\/3044385429553_f9fc9f38d8d90c37b2c2_72.jpg",
            "first_name": "Curtis",
            "real_name": "Curtis Hrischuk",
            "display_name": "Curtis",
            "team": "T03T53E10",
            "name": "curtis.hrischuk",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1755625705.407289",
        "parent_user_id": "U05E2CM37H6",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xvAZI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks.  Apology for asking but I was wondering if you followed the "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/docs.sync.global\/validator_operator\/validator_helm.html#configuring-authentication",
                                "text": "Configuring Authentication recommendations"
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ],
        "language": {
            "locale": "en",
            "is_reliable": true
        }
    },
    {
        "user": "U05E2CM37H6",
        "type": "message",
        "ts": "1755627478.220229",
        "client_msg_id": "15edd7d5-fdff-49ab-be9f-63a7be28eeb6",
        "text": "I did not, but am using the default `unsafe-jwt-hmac-256` configuration. I am able to generate JWTs and use them in Ledger API requests that do not involve party data (e.g. latest pruned offset)",
        "team": "T05FWTX7PMG",
        "user_team": "T01LU8PQFK7",
        "source_team": "T01LU8PQFK7",
        "user_profile": {
            "avatar_hash": "9e6029dc7fb8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-06-22\/5464887386197_9e6029dc7fb8e34033a2_72.png",
            "first_name": "Alex",
            "real_name": "Alex Miller",
            "display_name": "alex",
            "team": "T01LU8PQFK7",
            "name": "alex",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1755625705.407289",
        "parent_user_id": "U05E2CM37H6",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "a5tbf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I did not, but am using the default "
                            },
                            {
                                "type": "text",
                                "text": "unsafe-jwt-hmac-256",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " configuration. I am able to generate JWTs and use them in Ledger API requests that do not involve party data (e.g. latest pruned offset)"
                            }
                        ]
                    }
                ]
            }
        ],
        "language": {
            "locale": "en",
            "is_reliable": true
        }
    },
    {
        "user": "U0PQ8E25D",
        "type": "message",
        "ts": "1755634628.124429",
        "client_msg_id": "5b7cc9ab-bdc7-4d5f-b022-2670e7701d9f",
        "text": "<@U02LLFM3NF2>: the node has full read access to an external party's data. What you'll need to do is to provision your participant user with a `ReadAs(externalParty)` right using: <https:\/\/docs.digitalasset.com\/build\/3.3\/explanations\/json-api\/#grant-user-rights>",
        "team": "T05FWTX7PMG",
        "user_team": "T03T53E10",
        "source_team": "T03T53E10",
        "user_profile": {
            "avatar_hash": "c6facf15dae2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-25\/1906342699428_c6facf15dae249470e71_72.jpg",
            "first_name": "Simon",
            "real_name": "Simon Meier",
            "display_name": "simon",
            "team": "T03T53E10",
            "name": "simon",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1755625705.407289",
        "parent_user_id": "U05E2CM37H6",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ea4Oq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U02LLFM3NF2"
                            },
                            {
                                "type": "text",
                                "text": ": the node has full read access to an external party's data. What you'll need to do is to provision your participant user with a "
                            },
                            {
                                "type": "text",
                                "text": "ReadAs(externalParty)",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " right using: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/docs.digitalasset.com\/build\/3.3\/explanations\/json-api\/#grant-user-rights"
                            }
                        ]
                    }
                ]
            }
        ],
        "language": {
            "locale": "en",
            "is_reliable": true
        }
    }
]